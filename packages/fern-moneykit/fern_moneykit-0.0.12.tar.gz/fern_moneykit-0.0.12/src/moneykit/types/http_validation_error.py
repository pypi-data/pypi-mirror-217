# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions

from ..core.datetime_utils import serialize_datetime
from .validation_error import ValidationError


class HttpValidationError(pydantic.BaseModel):
    error_code: typing.Optional[typing_extensions.Literal["api_error.request.validation_failed"]]
    error_message: typing.Optional[str] = pydantic.Field(description=("Error message\n"))
    documentation_url: typing.Optional[str]
    validation_errors: typing.List[ValidationError]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
