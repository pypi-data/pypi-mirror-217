# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .ach_number import AchNumber
from .bacs_number import BacsNumber
from .eft_number import EftNumber
from .international_number import InternationalNumber


class AccountNumbers(pydantic.BaseModel):
    ach: typing.List[AchNumber] = pydantic.Field(description=("List of ACH account numbers.\n"))
    bacs: typing.List[BacsNumber] = pydantic.Field(description=("List of BACS account numbers.\n"))
    eft: typing.List[EftNumber] = pydantic.Field(description=("List of EFT account numbers.\n"))
    international: typing.List[InternationalNumber] = pydantic.Field(
        description=("List of international account numbers.\n")
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
