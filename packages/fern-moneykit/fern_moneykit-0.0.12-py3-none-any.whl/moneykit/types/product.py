# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class Product(str, enum.Enum):
    """
    Features that an institutions supports
    """

    ACCOUNTS = "accounts"
    ACCOUNT_NUMBERS = "account_numbers"
    IDENTITY = "identity"
    TRANSACTIONS = "transactions"

    def visit(
        self,
        accounts: typing.Callable[[], T_Result],
        account_numbers: typing.Callable[[], T_Result],
        identity: typing.Callable[[], T_Result],
        transactions: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is Product.ACCOUNTS:
            return accounts()
        if self is Product.ACCOUNT_NUMBERS:
            return account_numbers()
        if self is Product.IDENTITY:
            return identity()
        if self is Product.TRANSACTIONS:
            return transactions()
