[build-system]
requires = ["setuptools>=61", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.__repo }}"
summary = "{{ cookiecutter.short_description }}"
readme = "README.rst"
keywords = ["sphinx", "social", "cards", "previews"]
license = {text = "MIT"}
dynamic = ["version", "dependencies", "optional-dependencies"]
authors = [
    { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Framework :: Sphinx :: Extension",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Utilities",
]

[project.urls]
home =  "https://{{ cookiecutter.github_account }}.github.io/{{ cookiecutter.__repo }}"
download = "http://github.com/{{ cookiecutter.github_account }}/{{ cookiecutter.__repo }}"

[tool.setuptools]
zip-safe = false
packages = ["{{ cookiecutter.package_name }}"]
package-dir = { {{ cookiecutter.package_name }} = "{{ cookiecutter.package_name }}" }

{% if cookiecutter.add_layout == 'True' or cookiecutter.add_image == 'True' -%}
[tool.setuptools.package-data]
{{ cookiecutter.package_name }} = [
    {% if cookiecutter.add_layout == 'True' -%}
    "layouts/**/*.yml",
    {%- endif %}
    {% if cookiecutter.add_image == 'True' -%}
    {% for ext in ['png', 'jpg', 'svg', 'bmp'] -%}
    "images/**/*.{{ ext }}",
    {% endfor -%}
    {%- endif %}
]
{%- endif %}

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
optional-dependencies = { tests = { file = ["tests/requirements.txt"] }}

[tool.setuptools_scm]
# It would be nice to include the commit hash in the version, but that
# can't be done in a PEP 440-compatible way.
version_scheme= "no-guess-dev"
# Test PyPI does not support local versions.
local_scheme = "no-local-version"
fallback_version = "0.0.0"

[tool.mypy]
show_error_codes = true
show_column_numbers = true
