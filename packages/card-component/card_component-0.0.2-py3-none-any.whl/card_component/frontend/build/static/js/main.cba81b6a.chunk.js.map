{"version":3,"sources":["CardComponent.tsx","index.tsx"],"names":["CardComponent","_StreamlitComponentBa","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","toggleState","isFocused","render","img_path","props","title","body","pdf_cnts","theme","style","borderStyling","primaryColor","border","outline","_jsx","Card","sx","borderRadius","boxShadow","children","CardActionArea","onClick","onClicked","onFocus","_onFocus","onBlur","_onBlur","_jsxs","CardContent","src","width","height","marginBottom","filter","Typography","gutterBottom","overflow","whiteSpace","display","justifyContent","variant","color","parseFloat","setState","prevState","Streamlit","setComponentValue","_createClass","StreamlitComponentBase","withStreamlitConnection","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"qQAiBMA,EAAa,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GA6Ed,OA7EcP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACRM,MAAQ,CAAEC,aAAa,EAAOC,WAAW,GAAOb,EAEhDc,OAAS,WAEZ,IAAMC,EAAWf,EAAKgB,MAAMX,KAAe,SACrCY,EAAQjB,EAAKgB,MAAMX,KAAY,MAC/Ba,EAAOlB,EAAKgB,MAAMX,KAAW,KAC7Bc,EAAWnB,EAAKgB,MAAMX,KAAe,SAEnCe,EAAUpB,EAAKgB,MAAfI,MAEFC,EAA6B,CAAC,EAEpC,GAAID,EAAO,CACP,IAAME,EAAa,aAAAZ,OAAgBV,EAAKW,MAAME,UAAYO,EAAMG,aAAe,WAE/EF,EAAMG,OAASF,EACfD,EAAMI,QAAUH,CACpB,CAEA,OACII,cAACC,IAAI,CAACC,GAAI,CACNC,aAAc,OACdC,UAAW,QAEdC,SACGL,cAACM,IAAc,CACXC,QAASjC,EAAKkC,UACdC,QAASnC,EAAKoC,SACdC,OAAQrC,EAAKsC,QACbjB,MAAOA,EAAMU,SACbQ,eAACC,IAAW,CAAAT,SAAA,CACRL,cAAA,OAAKe,IAAK1B,EACNM,MAAO,CAAEqB,MAAO,OAAQC,OAAQ,OAAQC,aAAc,OAAQC,OAAQ,8FAC1EnB,cAACoB,IAAU,CAACC,cAAY,EAACC,SAAS,SAASC,WAAW,SAAQlB,SACzDd,IAELsB,eAAA,OAAKlB,MAAO,CAAE6B,QAAS,OAAQC,eAAgB,iBAAkBpB,SAAA,CAC7DL,cAACoB,IAAU,CAACM,QAAQ,UAChBJ,SAAS,SACTC,WAAW,SAAQlB,SAAC,6BACxBL,cAACoB,IAAU,CAACM,QAAQ,UAASrB,SACxBZ,OAGToB,eAAA,OAAKlB,MAAO,CAAE6B,QAAS,OAAQC,eAAgB,iBAAkBpB,SAAA,CAC7DL,cAACoB,IAAU,CAACM,QAAQ,UAAUJ,SAAS,SACnCC,WAAW,SAAQlB,SAAC,sCACxBL,cAACoB,IAAU,CACPM,QAAQ,UACRC,MAAOC,WAAWpC,GAAQ,EAAI,MAAQ,OAAOa,SAC5Cb,EAAO,EAAI,IAAMA,EAAO,IAAMA,EAAO,eAOlE,EAEAlB,EACQkC,UAAY,WAChBlC,EAAKuD,UACD,SAACC,GAAgC,MAAM,CAAE5C,aAAc4C,EAAU5C,YAAa,IAC9E,kBAAM6C,IAAUC,kBAAkB1D,EAAKW,MAAMC,YAAY,GAEjE,EAEAZ,EACQoC,SAAW,WACfpC,EAAKuD,SAAS,CAAE1C,WAAW,GAC/B,EAEAb,EACQsC,QAAU,WACdtC,EAAKuD,SAAS,CAAE1C,WAAW,GAC/B,EAACb,CAAA,QAAA2D,YAAAhE,EAAA,CA7Ec,CAASiE,KAgFbC,cAAwBlE,GC7FvCmE,IAAShD,OACPY,cAACqC,IAAMC,WAAU,CAAAjC,SACfL,cAAC/B,EAAa,MAEhBsE,SAASC,eAAe,Q","file":"static/js/main.cba81b6a.chunk.js","sourcesContent":["import {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\n\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from \"@mui/material\";\n\ninterface State {\n    toggleState: boolean,\n    isFocused: boolean\n}\n\nclass CardComponent extends StreamlitComponentBase<State> {\n    public state = { toggleState: false, isFocused: false }\n\n    public render = (): ReactNode => {\n\n        const img_path = this.props.args['img_path']\n        const title = this.props.args['title']\n        const body = this.props.args['body']\n        const pdf_cnts = this.props.args['pdf_cnts']\n\n        const { theme } = this.props\n\n        const style: React.CSSProperties = {}\n\n        if (theme) {\n            const borderStyling = `1px solid ${this.state.isFocused ? theme.primaryColor : \"#E5E4E1\"\n                }`\n            style.border = borderStyling\n            style.outline = borderStyling\n        }\n\n        return (\n            <Card sx={{\n                borderRadius: '20px',\n                boxShadow: 'none'\n            }\n            }>\n                <CardActionArea\n                    onClick={this.onClicked}\n                    onFocus={this._onFocus}\n                    onBlur={this._onBlur}\n                    style={style}>\n                    <CardContent>\n                        <img src={img_path}\n                            style={{ width: '24px', height: '24px', marginBottom: '10px', filter: 'invert(73%) sepia(55%) saturate(5076%) hue-rotate(347deg) brightness(100%) contrast(93%)' }} />\n                        <Typography gutterBottom overflow='hidden' whiteSpace='nowrap'>\n                            {title}\n                        </Typography>\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <Typography variant='caption'\n                                overflow='hidden'\n                                whiteSpace='nowrap'>종목코드</Typography>\n                            <Typography variant='caption'>\n                                {pdf_cnts}\n                            </Typography>\n                        </div>\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <Typography variant='caption' overflow='hidden'\n                                whiteSpace='nowrap'>수익률(3개월)</Typography>\n                            <Typography\n                                variant='caption'\n                                color={parseFloat(body) > 0 ? \"red\" : \"blue\"}>\n                                {body > 0 ? '+' + body + '%' : body + '%'}\n                            </Typography>\n                        </div>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        )\n    }\n\n    /** Click handler for our \"Click Me!\" button. */\n    private onClicked = (): void => {\n        this.setState(\n            (prevState: { toggleState: any; }) => ({ toggleState: !prevState.toggleState }),\n            () => Streamlit.setComponentValue(this.state.toggleState)\n        )\n    }\n\n    /** Focus handler for our \"Click Me!\" button. */\n    private _onFocus = (): void => {\n        this.setState({ isFocused: true })\n    }\n\n    /** Blur handler for our \"Click Me!\" button. */\n    private _onBlur = (): void => {\n        this.setState({ isFocused: false })\n    }\n}\n\nexport default withStreamlitConnection(CardComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport CardComponent from \"./CardComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <CardComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}