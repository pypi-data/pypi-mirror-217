name: ci

on:
    push:
        branches:
            - "master"
            - "dev"
            - "dev/*"
            - "ci"
    pull_request:
    workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest
        permissions:
            # Gives the action the necessary permissions for publishing new
            # comments in pull requests.
            pull-requests: write
            # Gives the action the necessary permissions for pushing data to the
            # python-coverage-comment-action branch, and for editing existing
            # comments (to avoid publishing multiple comments in the same PR)
            contents: write
        strategy:
            matrix:
                python-version: ["3.9", "3.10"]

        steps:
            - uses: actions/checkout@v3
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Get pip cache dir
              id: pip-cache
              run: echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.pip-cache.outputs.dir }}
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/*.txt') }}
                  restore-keys: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/*.txt') }}
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements/dev.txt
                  pip install -r requirements/test.txt
                  pip install -r requirements/prod.txt
            - name: Install package
              run: |
                  make install-dev
            - name: Run Linting
              run: |
                  make lint
            - name: Run Tests
              run: |
                  make tc-test
            - name: Coverage comment
              id: coverage_comment
              uses: py-cov-action/python-coverage-comment-action@v3
              with:
                  GITHUB_TOKEN: ${{ github.token }}

            - name: Store Pull Request comment to be posted
              uses: actions/upload-artifact@v3
              if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
              with:
                  # If you use a different name, update COMMENT_ARTIFACT_NAME accordingly
                  name: python-coverage-comment-action
                  # If you use a different name, update COMMENT_FILENAME accordingly
                  path: python-coverage-comment-action.txt
