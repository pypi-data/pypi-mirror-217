[project]
name = "frictionless"
dynamic = ["version"]
description = "Data management framework for Python that provides functionality to describe, extract, validate, and transform tabular data"
license = "MIT"
readme = "README.md"
requires-python = ">=3.8"
urls.homepage = "https://github.com/frictionlessdata/frictionless-py"
urls.changelog = "https://github.com/frictionlessdata/framework/blob/main/CHANGELOG.md"
project.scripts.frictionless = "frictionless.__main__:console"
authors = [
    {name = "Open Knowledge Foundation", email = "info@okfn.org"},
]
keywords=[
    "data validation",
    "frictionless data",
    "open data",
    "json schema",
    "json table schema",
    "data package",
    "tabular data package",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "petl>=1.6",
    "marko>=1.0",
    "attrs>=22.2.0",
    "jinja2>=3.0",
    "pyyaml>=5.3",
    "isodate>=0.6",
    "rfc3986>=1.4",
    "chardet>=3.0",
    "requests>=2.10",
    "humanize>=4.2",
    "tabulate>=0.8.10",
    "jsonschema>=2.5",
    "simpleeval>=0.9.11",
    "stringcase>=1.2",
    "typer[all]>=0.5",
    "validators>=0.18",
    "python-slugify>=1.2",
    "python-dateutil>=2.8",
    "typing-extensions>=4.3",
]

[project.optional-dependencies]
dev = [
    "moto",
    "ruff",
    "httpx",
    "hatch",
    "isort",
    "black",
    "yattag",
    "pytest",
    "pyright",
    "ipython",
    "livemark",
    "pytest-cov",
    "pytest-vcr",
    "pytest-mock",
    "pytest-only",
    "oauth2client",
    "requests-mock",
    "pytest-dotenv",
    "pytest-timeout",
    "pytest-lazy-fixture",
]
aws = ["boto3>=1.9"]
bigquery = ["google-api-python-client>=1.12.1"]
ckan = ["frictionless-ckan-mapper>=1.0"]
csv = []
datasette = ["datasette>=0.64.2"]
duckdb = ["sqlalchemy>=1.4", "duckdb-engine>=0.7", "duckdb>=0.8"]
excel = ["xlrd>=1.2", "xlwt>=1.2", "openpyxl>=3.0", "tableschema-to-template>=0.0"]
json = ["ijson>=3.0", "jsonlines>=1.2"]
github = ["pygithub>=1.50"]
gsheets = ["pygsheets>=2.0"]
html = ["pyquery>=1.4"]
mysql = ["sqlalchemy>=1.4", "pymysql>=1.0"]
ods = ["ezodf>=0.3", "lxml>=4.0"]
pandas = ["pandas>=1.0"]
parquet = ["fastparquet>=0.8"]
postgresql = ["sqlalchemy>=1.4", "psycopg>=3.0", "psycopg2>=2.9"]
spss = ["savReaderWriter>=3.0"]
sql = ["sqlalchemy>=1.4"]
visidata = ["visidata>=2.10"]
wkt = ["grako>=3.99"]
zenodo = ["pyzenodo3>=1.0"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "frictionless/settings.py"

[tool.black]
line-length = 90

[tool.isort]
profile = "black"
multi_line_output = 9

[tool.ruff]
line-length = 90
ignore = ["E501", "E731"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.pytest.ini_options]
testpaths = ["tests"]
env_files = [".env"]
markers = [
    "ci: integrational tests (select with '--ci')",
]
filterwarnings = [
    "ignore::DeprecationWarning:boto.*",
    "ignore::DeprecationWarning:moto.*",
    "ignore::DeprecationWarning:grako.*",
    "ignore::DeprecationWarning:savWriter.*",
    "ignore::Warning:duckdb_engine.*",
]

[tool.pyright]
strict = ["frictionless"]
include = ["frictionless", "tests"]
exclude = ["frictionless/vendors"]
ignore = ["**/__init__.py"]
