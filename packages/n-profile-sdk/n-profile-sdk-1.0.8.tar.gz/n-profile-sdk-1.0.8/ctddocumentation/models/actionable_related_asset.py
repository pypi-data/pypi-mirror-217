# -*- coding: utf-8 -*-

"""
ctddocumentation

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from ctddocumentation.api_helper import APIHelper


class ActionableRelatedAsset(object):

    """Implementation of the 'ActionableRelatedAsset' model.

    TODO: type model description here.

    Attributes:
        site_id (int): TODO: type description here.
        resource_id (string): TODO: type description here.
        id (int): TODO: type description here.
        ip (list of string): TODO: type description here.
        mac (list of string): TODO: type description here.
        asset_type_number (int): TODO: type description here.
        asset_type_name (string): TODO: type description here.
        name (string): TODO: type description here.
        network_id (int): TODO: type description here.
        vendor (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "site_id": 'site_id',
        "resource_id": 'resource_id',
        "id": 'id',
        "ip": 'ip',
        "mac": 'mac',
        "asset_type_number": 'asset_type_number',
        "asset_type_name": 'asset_type_name',
        "name": 'name',
        "network_id": 'network_id',
        "vendor": 'vendor'
    }

    _optionals = [
        'site_id',
        'resource_id',
        'id',
        'ip',
        'mac',
        'asset_type_number',
        'asset_type_name',
        'name',
        'network_id',
        'vendor',
    ]

    def __init__(self,
                 site_id=APIHelper.SKIP,
                 resource_id=APIHelper.SKIP,
                 id=APIHelper.SKIP,
                 ip=APIHelper.SKIP,
                 mac=APIHelper.SKIP,
                 asset_type_number=APIHelper.SKIP,
                 asset_type_name=APIHelper.SKIP,
                 name=APIHelper.SKIP,
                 network_id=APIHelper.SKIP,
                 vendor=APIHelper.SKIP):
        """Constructor for the ActionableRelatedAsset class"""

        # Initialize members of the class
        if site_id is not APIHelper.SKIP:
            self.site_id = site_id 
        if resource_id is not APIHelper.SKIP:
            self.resource_id = resource_id 
        if id is not APIHelper.SKIP:
            self.id = id 
        if ip is not APIHelper.SKIP:
            self.ip = ip 
        if mac is not APIHelper.SKIP:
            self.mac = mac 
        if asset_type_number is not APIHelper.SKIP:
            self.asset_type_number = asset_type_number 
        if asset_type_name is not APIHelper.SKIP:
            self.asset_type_name = asset_type_name 
        if name is not APIHelper.SKIP:
            self.name = name 
        if network_id is not APIHelper.SKIP:
            self.network_id = network_id 
        if vendor is not APIHelper.SKIP:
            self.vendor = vendor 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        site_id = dictionary.get("site_id") if dictionary.get("site_id") else APIHelper.SKIP
        resource_id = dictionary.get("resource_id") if dictionary.get("resource_id") else APIHelper.SKIP
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        ip = dictionary.get("ip") if dictionary.get("ip") else APIHelper.SKIP
        mac = dictionary.get("mac") if dictionary.get("mac") else APIHelper.SKIP
        asset_type_number = dictionary.get("asset_type_number") if dictionary.get("asset_type_number") else APIHelper.SKIP
        asset_type_name = dictionary.get("asset_type_name") if dictionary.get("asset_type_name") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        network_id = dictionary.get("network_id") if dictionary.get("network_id") else APIHelper.SKIP
        vendor = dictionary.get("vendor") if dictionary.get("vendor") else APIHelper.SKIP
        # Return an object of this model
        return cls(site_id,
                   resource_id,
                   id,
                   ip,
                   mac,
                   asset_type_number,
                   asset_type_name,
                   name,
                   network_id,
                   vendor)
