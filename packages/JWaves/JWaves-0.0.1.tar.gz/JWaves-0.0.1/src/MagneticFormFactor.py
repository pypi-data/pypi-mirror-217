import numpy as np
## Magnetic Form factor tables from https://www.ill.eu/sites/ccsl/ffacts/ P.J. Brown - Institut Laue Langevin, Grenoble, FRANCE. e-mail: brown@ill.fr

magneticFormFactor = {'columns': np.array(['A', 'a', 'B', 'b', 'C', 'c', 'D', 'A2', 'a2', 'B2', 'b2', 'C2',
        'c2', 'D2'], dtype='<U2'),
 'Sc0': np.array([ 2.51200e-01,  9.00296e+01,  3.29000e-01,  3.94021e+01,
         4.23500e-01,  1.43222e+01, -4.30000e-03,  1.08172e+01,
         5.43270e+01,  4.73530e+00,  1.48471e+01,  6.07100e-01,
         4.21800e+00,  1.10000e-03]),
 'Sc1': np.array([ 4.88900e-01,  5.11603e+01,  5.20300e-01,  1.40764e+01,
        -2.86000e-02,  1.79200e-01,  1.85000e-02,  8.50210e+00,
         3.42851e+01,  3.21160e+00,  1.09940e+01,  4.24400e-01,
         3.60550e+00,  9.00000e-04]),
 'Sc2': np.array([ 5.04800e-01,  3.14035e+01,  5.18600e-01,  1.09897e+01,
        -2.41000e-02,  1.18310e+00,  0.00000e+00,  4.36830e+00,
         2.86544e+01,  3.72310e+00,  1.08233e+01,  6.07400e-01,
         3.66780e+00,  1.40000e-03]),
 'Ti0': np.array([ 4.65700e-01,  3.35898e+01,  5.49000e-01,  9.87910e+00,
        -2.91000e-02,  3.23200e-01,  1.23000e-02,  4.35830e+00,
         3.60556e+01,  3.82300e+00,  1.11328e+01,  6.85500e-01,
         3.46920e+00,  2.00000e-03]),
 'Ti1': np.array([ 5.09300e-01,  3.67033e+01,  5.03200e-01,  1.03713e+01,
        -2.63000e-02,  3.10600e-01,  1.16000e-02,  6.15670e+00,
         2.72754e+01,  2.68330e+00,  8.98270e+00,  4.07000e-01,
         3.05240e+00,  1.10000e-03]),
 'Ti2': np.array([ 5.09100e-01,  2.49763e+01,  5.16200e-01,  8.75690e+00,
        -2.81000e-02,  9.16000e-01,  1.50000e-03,  4.31070e+00,
         1.83484e+01,  2.09600e+00,  6.79700e+00,  2.98400e-01,
         2.54760e+00,  7.00000e-04]),
 'Ti3': np.array([ 3.57100e-01,  2.28413e+01,  6.68800e-01,  8.93060e+00,
        -3.54000e-02,  4.83300e-01,  9.90000e-03,  3.37170e+00,
         1.44441e+01,  1.82580e+00,  5.71260e+00,  2.47000e-01,
         2.26540e+00,  5.00000e-04]),
 'V0': np.array([ 4.08600e-01,  2.88109e+01,  6.07700e-01,  8.54370e+00,
        -2.95000e-02,  2.76800e-01,  1.23000e-02,  3.80990e+00,
         2.13471e+01,  2.32950e+00,  7.40890e+00,  4.33300e-01,
         2.63240e+00,  1.50000e-03,  3.89890e+00,  2.04087e+01,
         2.21510e+00,  7.08420e+00,  3.92100e-01,  2.54010e+00,
         1.40000e-03]),
 'V1': np.array([ 4.44400e-01,  3.26479e+01,  5.68300e-01,  9.09710e+00,
        -2.28500e-01,  2.18000e-02,  2.15000e-01,  4.74740e+00,
         2.33226e+01,  2.36090e+00,  7.80820e+00,  4.10500e-01,
         2.70630e+00,  1.40000e-03]),
 'V2': np.array([ 4.08500e-01,  2.38526e+01,  6.09100e-01,  8.24560e+00,
        -1.67600e-01,  4.15000e-02,  1.49600e-01,  3.43860e+00,
         1.65303e+01,  1.96380e+00,  6.14150e+00,  2.99700e-01,
         2.26690e+00,  9.00000e-04]),
 'V3': np.array([ 3.59800e-01,  1.93364e+01,  6.63200e-01,  7.61720e+00,
        -3.06400e-01,  2.96000e-02,  2.83500e-01,  2.30050e+00,
         1.46821e+01,  2.03640e+00,  6.13040e+00,  4.09900e-01,
         2.38150e+00,  1.40000e-03]),
 'V4': np.array([ 3.10600e-01,  1.68160e+01,  7.19800e-01,  7.04870e+00,
        -5.21000e-02,  3.02000e-01,  2.21000e-02,  1.83770e+00,
         1.22668e+01,  1.82470e+00,  5.45780e+00,  3.97900e-01,
         2.24830e+00,  1.20000e-03]),
 'Cr0': np.array([ 1.13500e-01,  4.51990e+01,  3.48100e-01,  1.94931e+01,
         5.47700e-01,  7.35420e+00, -9.20000e-03,  3.40850e+00,
         2.01267e+01,  2.10060e+00,  6.80200e+00,  4.26600e-01,
         2.39410e+00,  1.90000e-03]),
 'Cr1': np.array([-9.77000e-02,  4.70000e-02,  4.54400e-01,  2.60054e+01,
         5.57900e-01,  7.48920e+00,  8.31000e-02,  3.77680e+00,
         2.03456e+01,  2.10280e+00,  6.89260e+00,  4.01000e-01,
         2.41140e+00,  1.70000e-03]),
 'Cr2': np.array([ 1.20240e+00, -5.50000e-03,  4.15800e-01,  2.05475e+01,
         6.03200e-01,  6.95600e+00, -1.22180e+00,  2.64220e+00,
         1.60598e+01,  1.91980e+00,  6.25310e+00,  4.44600e-01,
         2.37150e+00,  2.00000e-03]),
 'Cr3': np.array([-3.09400e-01,  2.74000e-02,  3.68000e-01,  1.70355e+01,
         6.55900e-01,  6.52360e+00,  2.85600e-01,  1.62620e+00,
         1.50656e+01,  2.06180e+00,  6.28420e+00,  5.28100e-01,
         2.36800e+00,  2.30000e-03]),
 'Cr4': np.array([-2.32000e-01,  4.33000e-02,  3.10100e-01,  1.49518e+01,
         7.18200e-01,  6.17260e+00,  2.04200e-01,  1.02930e+00,
         1.39498e+01,  1.99330e+00,  6.05930e+00,  5.97400e-01,
         2.34570e+00,  2.70000e-03]),
 'Mn0': np.array([ 2.43800e-01,  2.49629e+01,  1.47200e-01,  1.56728e+01,
         6.18900e-01,  6.54030e+00, -1.05000e-02,  2.66810e+00,
         1.60601e+01,  1.75610e+00,  5.63960e+00,  3.67500e-01,
         2.04880e+00,  1.70000e-03]),
 'Mn1': np.array([-1.3800e-02,  4.2130e-01,  4.2310e-01,  2.4668e+01,  5.9050e-01,
         6.6545e+00, -1.0000e-03,  3.2953e+00,  1.8695e+01,  1.8792e+00,
         6.2403e+00,  3.9270e-01,  2.2006e+00,  2.2000e-03]),
 'Mn2': np.array([ 4.22000e-01,  1.76840e+01,  5.94800e-01,  6.00500e+00,
         4.30000e-03, -6.09000e-01, -2.19000e-02,  2.05150e+00,
         1.55561e+01,  1.88410e+00,  6.06250e+00,  4.78700e-01,
         2.23230e+00,  2.70000e-03]),
 'Mn3': np.array([ 4.19800e-01,  1.42829e+01,  6.05400e-01,  5.46890e+00,
         9.24100e-01, -8.80000e-03, -9.49800e-01,  1.24270e+00,
         1.49966e+01,  1.95670e+00,  6.11810e+00,  5.73200e-01,
         2.25770e+00,  3.10000e-03]),
 'Mn4': np.array([ 3.76000e-01,  1.25661e+01,  6.60200e-01,  5.13290e+00,
        -3.72000e-02,  5.63000e-01,  1.10000e-03,  7.87900e-01,
         1.38857e+01,  1.87170e+00,  5.74330e+00,  5.98100e-01,
         2.18180e+00,  3.40000e-03]),
 'Fe0': np.array([ 7.06000e-02,  3.50085e+01,  3.58900e-01,  1.53583e+01,
         5.81900e-01,  5.56060e+00, -1.14000e-02,  1.94050e+00,
         1.84733e+01,  1.95660e+00,  6.32340e+00,  5.16600e-01,
         2.16070e+00,  3.60000e-03]),
 'Fe1': np.array([ 1.25100e-01,  3.49633e+01,  3.62900e-01,  1.55144e+01,
         5.22300e-01,  5.59140e+00, -1.05000e-02,  2.62900e+00,
         1.86598e+01,  1.87040e+00,  6.33130e+00,  4.69000e-01,
         2.16280e+00,  3.10000e-03]),
 'Fe2': np.array([ 2.63000e-02,  3.49597e+01,  3.66800e-01,  1.59435e+01,
         6.18800e-01,  5.59350e+00, -1.19000e-02,  1.64900e+00,
         1.65593e+01,  1.90640e+00,  6.13250e+00,  5.20600e-01,
         2.13700e+00,  3.50000e-03]),
 'Fe3': np.array([ 3.97200e-01,  1.32442e+01,  6.29500e-01,  4.90340e+00,
        -3.14000e-02,  3.49600e-01,  4.40000e-03,  1.36020e+00,
         1.19976e+01,  1.51880e+00,  5.00250e+00,  4.70500e-01,
         1.99140e+00,  3.80000e-03]),
 'Fe4': np.array([ 3.7820e-01,  1.1380e+01,  6.5560e-01,  4.5920e+00, -3.4600e-02,
         4.8330e-01,  5.0000e-04,  1.5582e+00,  8.2750e+00,  1.1863e+00,
         3.2794e+00,  1.3660e-01,  1.1068e+00, -2.2000e-03]),
 'Co0': np.array([ 4.13900e-01,  1.61616e+01,  6.01300e-01,  4.78050e+00,
        -1.51800e-01,  2.10000e-02,  1.34500e-01,  1.96780e+00,
         1.41699e+01,  1.49110e+00,  4.94750e+00,  3.84400e-01,
         1.79730e+00,  2.70000e-03]),
 'Co1': np.array([ 9.90000e-02,  3.31252e+01,  3.64500e-01,  1.51768e+01,
         5.47000e-01,  5.00810e+00, -1.09000e-02,  2.40970e+00,
         1.61608e+01,  1.57800e+00,  5.46040e+00,  4.09500e-01,
         1.91410e+00,  3.10000e-03]),
 'Co2': np.array([ 4.33200e-01,  1.43553e+01,  5.85700e-01,  4.60770e+00,
        -3.82000e-02,  1.33800e-01,  1.79000e-02,  1.90490e+00,
         1.16444e+01,  1.31590e+00,  4.35740e+00,  3.14600e-01,
         1.64530e+00,  1.70000e-03]),
 'Co3': np.array([ 3.90200e-01,  1.25078e+01,  6.32400e-01,  4.45740e+00,
        -1.50000e-01,  3.43000e-02,  1.27200e-01,  1.70580e+00,
         8.85950e+00,  1.14090e+00,  3.30860e+00,  1.47400e-01,
         1.08990e+00, -2.50000e-03]),
 'Co4': np.array([ 3.51500e-01,  1.07785e+01,  6.77800e-01,  4.23430e+00,
        -3.89000e-02,  2.40900e-01,  9.80000e-03,  1.31100e+00,
         8.02520e+00,  1.15510e+00,  3.17920e+00,  1.60800e-01,
         1.13010e+00, -1.10000e-03]),
 'Ni0': np.array([-1.72000e-02,  3.57392e+01,  3.17400e-01,  1.42689e+01,
         7.13600e-01,  4.56610e+00, -1.43000e-02,  1.03020e+00,
         1.22521e+01,  1.46690e+00,  4.74530e+00,  4.52100e-01,
         1.74370e+00,  3.60000e-03]),
 'Ni1': np.array([ 7.05000e-02,  3.58561e+01,  3.98400e-01,  1.38042e+01,
         5.42700e-01,  4.39650e+00, -1.18000e-02,  2.10400e+00,
         1.48655e+01,  1.43020e+00,  5.07140e+00,  4.03100e-01,
         1.77840e+00,  3.40000e-03]),
 'Ni2': np.array([ 1.63000e-02,  3.58826e+01,  3.91600e-01,  1.32233e+01,
         6.05200e-01,  4.33880e+00, -1.33000e-02,  1.70800e+00,
         1.10160e+01,  1.21470e+00,  4.10310e+00,  3.15000e-01,
         1.53340e+00,  1.80000e-03]),
 'Ni3': np.array([-1.34000e-02,  3.58677e+01,  2.67800e-01,  1.23326e+01,
         7.61400e-01,  4.23690e+00, -1.62000e-02,  1.16120e+00,
         7.70000e+00,  1.00270e+00,  3.26280e+00,  2.71900e-01,
         1.37800e+00,  2.50000e-03]),
 'Ni4': np.array([-9.00000e-03,  3.58614e+01,  2.77600e-01,  1.17904e+01,
         7.47400e-01,  4.20110e+00, -1.63000e-02,  1.16120e+00,
         7.70000e+00,  1.00270e+00,  3.26280e+00,  2.71900e-01,
         1.37800e+00,  2.50000e-03]),
 'Cu0': np.array([ 9.09000e-02,  3.49838e+01,  4.08800e-01,  1.14432e+01,
         5.12800e-01,  3.82480e+00, -1.24000e-02,  1.91820e+00,
         1.44904e+01,  1.33290e+00,  4.73010e+00,  3.84200e-01,
         1.63940e+00,  3.50000e-03]),
 'Cu1': np.array([ 7.49000e-02,  3.49656e+01,  4.14700e-01,  1.17642e+01,
         5.23800e-01,  3.84970e+00, -1.27000e-02,  1.88140e+00,
         1.34333e+01,  1.28090e+00,  4.54460e+00,  3.64600e-01,
         1.60220e+00,  3.30000e-03]),
 'Cu2': np.array([ 2.32000e-02,  3.49686e+01,  4.02300e-01,  1.15640e+01,
         5.88200e-01,  3.84280e+00, -1.37000e-02,  1.51890e+00,
         1.04779e+01,  1.15120e+00,  3.81320e+00,  2.91800e-01,
         1.39790e+00,  1.70000e-03]),
 'Cu3': np.array([ 3.10000e-03,  3.49074e+01,  3.58200e-01,  1.09138e+01,
         6.53100e-01,  3.82790e+00, -1.47000e-02,  1.27970e+00,
         8.45020e+00,  1.03150e+00,  3.27960e+00,  2.40100e-01,
         1.24980e+00,  1.50000e-03]),
 'Cu4': np.array([-1.32000e-02,  3.06817e+01,  2.80100e-01,  1.11626e+01,
         7.49000e-01,  3.81720e+00, -1.65000e-02,  9.56800e-01,
         7.44810e+00,  9.09900e-01,  3.39640e+00,  3.72900e-01,
         1.49360e+00,  4.90000e-03]),
 'Y0': np.array([ 5.91500e-01,  6.76081e+01,  1.51230e+00,  1.79004e+01,
        -1.11300e+00,  1.41359e+01,  8.00000e-03,  1.44084e+01,
         4.46577e+01,  5.10450e+00,  1.49043e+01, -5.35000e-02,
         3.31890e+00,  2.80000e-03]),
 'Zr0': np.array([ 4.10600e-01,  5.99961e+01,  1.05430e+00,  1.86476e+01,
        -4.75100e-01,  1.05400e+01,  1.06000e-02,  1.01378e+01,
         3.53372e+01,  4.77340e+00,  1.25453e+01, -4.89000e-02,
         2.67210e+00,  3.60000e-03]),
 'Zr1': np.array([ 4.53200e-01,  5.95948e+01,  7.83400e-01,  2.14357e+01,
        -2.45100e-01,  9.03600e+00,  9.80000e-03,  1.18722e+01,
         3.49200e+01,  4.05020e+00,  1.21266e+01, -6.32000e-02,
         2.82780e+00,  3.40000e-03]),
 'Nb0': np.array([ 3.94600e-01,  4.92297e+01,  1.31970e+00,  1.48216e+01,
        -7.26900e-01,  9.61560e+00,  1.29000e-02,  7.47960e+00,
         3.31789e+01,  5.08840e+00,  1.15708e+01, -2.81000e-02,
         1.56350e+00,  4.70000e-03]),
 'Nb1': np.array([ 4.57200e-01,  4.99182e+01,  1.02740e+00,  1.57256e+01,
        -4.96200e-01,  9.15730e+00,  1.18000e-02,  8.77350e+00,
         3.32848e+01,  4.65560e+00,  1.16046e+01, -2.68000e-02,
         1.53890e+00,  4.40000e-03]),
 'Mo0': np.array([ 1.80600e-01,  4.90568e+01,  1.23060e+00,  1.47859e+01,
        -4.26800e-01,  6.98660e+00,  1.71000e-02,  5.11800e+00,
         2.34217e+01,  4.18090e+00,  9.20800e+00, -5.05000e-02,
         1.74340e+00,  5.30000e-03]),
 'Mo1': np.array([ 3.50000e-01,  4.80354e+01,  1.03050e+00,  1.50604e+01,
        -3.92900e-01,  7.47900e+00,  1.39000e-02,  7.23670e+00,
         2.81282e+01,  4.07050e+00,  9.92280e+00, -3.17000e-02,
         1.45520e+00,  4.90000e-03]),
 'Tc0': np.array([ 1.29800e-01,  4.96611e+01,  1.16560e+00,  1.41307e+01,
        -3.13400e-01,  5.51290e+00,  1.95000e-02,  4.24410e+00,
         2.13974e+01,  3.94390e+00,  8.37530e+00, -3.71000e-02,
         1.18700e+00,  6.60000e-03]),
 'Tc1': np.array([ 2.67400e-01,  4.89566e+01,  9.56900e-01,  1.51413e+01,
        -2.38700e-01,  5.45780e+00,  1.60000e-02,  6.40560e+00,
         2.48243e+01,  3.54000e+00,  8.61120e+00, -3.66000e-02,
         1.48460e+00,  4.40000e-03]),
 'Ru0': np.array([ 1.06900e-01,  4.94238e+01,  1.19120e+00,  1.27417e+01,
        -3.17600e-01,  4.91250e+00,  2.13000e-02,  3.74450e+00,
         1.86128e+01,  3.47490e+00,  7.42010e+00, -3.63000e-02,
         1.00680e+00,  7.30000e-03]),
 'Ru1': np.array([ 4.41000e-01,  3.33086e+01,  1.47750e+00,  9.55310e+00,
        -9.36100e-01,  6.72200e+00,  1.76000e-02,  5.28260e+00,
         2.36832e+01,  3.58130e+00,  8.15210e+00, -2.57000e-02,
         4.25500e-01,  1.31000e-02]),
 'Rh0': np.array([ 9.76000e-02,  4.98825e+01,  1.16010e+00,  1.18307e+01,
        -2.78900e-01,  4.12660e+00,  2.34000e-02,  3.36510e+00,
         1.73444e+01,  3.21210e+00,  6.80410e+00, -3.50000e-02,
         5.03100e-01,  1.46000e-02]),
 'Rh1': np.array([ 3.34200e-01,  2.97564e+01,  1.22090e+00,  9.43840e+00,
        -5.75500e-01,  5.33200e+00,  2.10000e-02,  4.02600e+00,
         1.89497e+01,  3.16630e+00,  6.99980e+00, -2.96000e-02,
         4.86200e-01,  1.27000e-02]),
 'Pd0': np.array([ 2.00300e-01,  2.93633e+01,  1.14460e+00,  9.59930e+00,
        -3.68900e-01,  4.04230e+00,  2.51000e-02,  3.31050e+00,
         1.47265e+01,  2.63320e+00,  5.86180e+00, -4.37000e-02,
         1.13030e+00,  5.30000e-03]),
 'Pd1': np.array([ 5.03300e-01,  2.45037e+01,  1.99820e+00,  6.90820e+00,
        -1.52400e+00,  5.51330e+00,  2.13000e-02,  4.27490e+00,
         1.79002e+01,  2.70210e+00,  6.35410e+00, -2.58000e-02,
         6.99900e-01,  7.10000e-03]),
 'Ce3': np.array([ 2.95300e-01,  1.76846e+01,  2.92300e-01,  6.73290e+00,
         4.31300e-01,  5.38270e+00, -1.94000e-02,  9.80900e-01,
         1.80630e+01,  1.84130e+00,  7.76880e+00,  9.90500e-01,
         2.84520e+00,  1.20000e-02]),
 'Nd2': np.array([ 1.64500e-01,  2.50453e+01,  2.52200e-01,  1.19782e+01,
         6.01200e-01,  4.94610e+00, -1.80000e-02,  1.45300e+00,
         1.83398e+01,  1.61960e+00,  7.28540e+00,  8.75200e-01,
         2.62240e+00,  1.26000e-02]),
 'Nd3': np.array([ 5.40000e-02,  2.50293e+01,  3.10100e-01,  1.21020e+01,
         6.57500e-01,  4.72230e+00, -2.16000e-02,  6.75100e-01,
         1.83421e+01,  1.62720e+00,  7.26000e+00,  9.64400e-01,
         2.60160e+00,  1.50000e-02]),
 'Sm2': np.array([ 9.09000e-02,  2.52032e+01,  3.03700e-01,  1.18562e+01,
         6.25000e-01,  4.23660e+00, -2.00000e-02,  1.03600e+00,
         1.84249e+01,  1.47690e+00,  7.03210e+00,  8.81000e-01,
         2.43670e+00,  1.52000e-02]),
 'Sm3': np.array([ 2.88000e-02,  2.52068e+01,  2.97300e-01,  1.18311e+01,
         6.95400e-01,  4.21170e+00, -2.13000e-02,  4.70700e-01,
         1.84301e+01,  1.42610e+00,  7.03360e+00,  9.57400e-01,
         2.43870e+00,  1.82000e-02]),
 'Eu2': np.array([ 7.55000e-02,  2.52960e+01,  3.00100e-01,  1.15993e+01,
         6.43800e-01,  4.02520e+00, -1.96000e-02,  8.97000e-01,
         1.84429e+01,  1.37690e+00,  7.00540e+00,  9.06000e-01,
         2.42130e+00,  1.90000e-02]),
 'Eu3': np.array([ 2.04000e-02,  2.53078e+01,  3.01000e-01,  1.14744e+01,
         7.00500e-01,  3.94200e+00, -2.20000e-02,  3.98500e-01,
         1.84514e+01,  1.33070e+00,  6.95560e+00,  9.60300e-01,
         2.37800e+00,  1.97000e-02]),
 'Gd2': np.array([ 6.36000e-02,  2.53823e+01,  3.03300e-01,  1.12125e+01,
         6.52800e-01,  3.78770e+00, -1.99000e-02,  7.75600e-01,
         1.84695e+01,  1.31240e+00,  6.89900e+00,  8.95600e-01,
         2.33830e+00,  1.99000e-02]),
 'Gd3': np.array([ 1.86000e-02,  2.53867e+01,  2.89500e-01,  1.11421e+01,
         7.13500e-01,  3.75200e+00, -2.17000e-02,  3.34700e-01,
         1.84758e+01,  1.24650e+00,  6.87670e+00,  9.53700e-01,
         2.31840e+00,  2.17000e-02]),
 'Tb2': np.array([ 5.47000e-02,  2.55086e+01,  3.17100e-01,  1.05911e+01,
         6.49000e-01,  3.51710e+00, -2.12000e-02,  6.68800e-01,
         1.84909e+01,  1.24870e+00,  6.82190e+00,  8.88800e-01,
         2.27510e+00,  2.15000e-02]),
 'Tb3': np.array([ 1.77000e-02,  2.55095e+01,  2.92100e-01,  1.05769e+01,
         7.13300e-01,  3.51220e+00, -2.31000e-02,  2.89200e-01,
         1.84973e+01,  1.16780e+00,  6.79720e+00,  9.43700e-01,
         2.25730e+00,  2.32000e-02]),
 'Dy2': np.array([ 0.1308, 18.3155,  0.3118,  7.6645,  0.5795,  3.1469, -0.0226,
         0.5917, 18.5114,  1.1828,  6.7465,  0.8801,  2.2141,  0.0229]),
 'Dy3': np.array([ 0.1157, 15.0732,  0.327 ,  6.7991,  0.5821,  3.0202, -0.0249,
         0.2523, 18.5172,  1.0914,  6.7362,  0.9345,  2.2082,  0.025 ]),
 'Ho2': np.array([ 0.0995, 18.1761,  0.3305,  7.8556,  0.5921,  2.9799, -0.023 ,
         0.5094, 18.5155,  1.1234,  6.706 ,  0.8727,  2.1589,  0.0242]),
 'Ho3': np.array([ 0.0566, 18.3176,  0.3365,  7.688 ,  0.6317,  2.9427, -0.0248,
         0.2188, 18.5157,  1.024 ,  6.707 ,  0.9251,  2.1614,  0.0268]),
 'Er2': np.array([ 0.1122, 18.1223,  0.3462,  6.9106,  0.5649,  2.7614, -0.0235,
         0.4693, 18.5278,  1.0545,  6.6493,  0.8679,  2.1201,  0.0261]),
 'Er3': np.array([ 0.0586, 17.9802,  0.354 ,  7.0964,  0.6126,  2.7482, -0.0251,
         0.171 , 18.5337,  0.9879,  6.6246,  0.9044,  2.1004,  0.0278]),
 'Tm2': np.array([ 0.0983, 18.3236,  0.338 ,  6.9178,  0.5875,  2.6622, -0.0241,
         0.4198, 18.5417,  0.9959,  6.6002,  0.8593,  2.0818,  0.0284]),
 'Tm3': np.array([ 0.0581, 15.0922,  0.2787,  7.8015,  0.6854,  2.7931, -0.0224,
         0.176 , 18.5417,  0.9105,  6.5787,  0.897 ,  2.0622,  0.0294]),
 'Yb2': np.array([ 0.0855, 18.5123,  0.2943,  7.3734,  0.6412,  2.6777, -0.0213,
         0.3852, 18.5497,  0.9415,  6.5507,  0.8492,  2.0425,  0.0301]),
 'Yb3': np.array([ 0.0416, 16.0949,  0.2849,  7.8341,  0.6961,  2.6725, -0.0229,
         0.157 , 18.5553,  0.8484,  6.5403,  0.888 ,  2.0367,  0.0318]),
 'Pr3': np.array([ 5.04000e-02,  2.49989e+01,  2.57200e-01,  1.20377e+01,
         7.14200e-01,  5.00390e+00, -2.19000e-02,  8.73400e-01,
         1.89876e+01,  1.55940e+00,  6.08720e+00,  8.14200e-01,
         2.41500e+00,  1.11000e-02]),
 'U3': np.array([ 5.05800e-01,  2.32882e+01,  1.34640e+00,  7.00280e+00,
        -8.72400e-01,  4.86830e+00,  1.92000e-02,  4.15820e+00,
         1.65336e+01,  2.46750e+00,  5.95160e+00, -2.52000e-02,
         7.64600e-01,  5.70000e-03]),
 'U4': np.array([ 3.29100e-01,  2.35475e+01,  1.08360e+00,  8.45400e+00,
        -4.34000e-01,  4.11960e+00,  2.14000e-02,  3.74490e+00,
         1.38944e+01,  2.64530e+00,  4.86340e+00, -5.21800e-01,
         3.19190e+00,  9.00000e-04]),
 'U5': np.array([ 3.65000e-01,  1.98038e+01,  3.21990e+00,  6.28180e+00,
        -2.60770e+00,  5.30100e+00,  2.33000e-02,  3.07240e+00,
         1.25460e+01,  2.30760e+00,  5.23140e+00, -6.44000e-02,
         1.47380e+00,  3.50000e-03]),
 'Np3': np.array([ 5.15700e-01,  2.08654e+01,  2.27840e+00,  5.89300e+00,
        -1.81630e+00,  4.84570e+00,  2.11000e-02,  3.71700e+00,
         1.51333e+01,  2.32160e+00,  5.50250e+00, -2.75000e-02,
         7.99600e-01,  5.20000e-03]),
 'Np4': np.array([ 4.20600e-01,  1.98046e+01,  2.80040e+00,  5.97830e+00,
        -2.24360e+00,  4.98480e+00,  2.28000e-02,  2.92030e+00,
         1.46463e+01,  2.59790e+00,  5.55920e+00, -3.01000e-02,
         3.66900e-01,  1.41000e-02]),
 'Np5': np.array([ 0.3692, 18.19  ,  3.151 ,  5.85  , -2.5446,  4.9164,  0.0248,
         2.3308, 13.654 ,  2.7219,  5.4935, -0.1357,  0.0493,  0.1224]),
 'Np6': np.array([ 0.2929, 17.5611,  3.4866,  5.7847, -2.8066,  4.8707,  0.0267,
         1.8245, 13.1803,  2.8508,  5.4068, -0.1579,  0.0444,  0.1438]),
 'Pu3': np.array([ 0.384 , 16.6793,  3.1049,  5.421 , -2.5148,  4.5512,  0.0263,
         2.0885, 12.8712,  2.5961,  5.1896, -0.1465,  0.0393,  0.1343]),
 'Pu4': np.array([ 0.4934, 16.8355,  1.6394,  5.6384, -1.1581,  4.1399,  0.0248,
         2.7244, 12.9262,  2.3387,  5.1633, -0.13  ,  0.0457,  0.1177]),
 'Pu5': np.array([ 0.3888, 16.5592,  2.0362,  5.6567, -1.4515,  4.2552,  0.0267,
         2.1409, 12.8319,  2.5664,  5.1522, -0.1338,  0.0457,  0.121 ]),
 'Pu6': np.array([ 0.3172, 16.0507,  3.4654,  5.3507, -2.8102,  4.5133,  0.0281,
         1.7262, 12.324 ,  2.6652,  5.0662, -0.1695,  0.0406,  0.155 ]),
 'Am2': np.array([ 4.74300e-01,  2.17761e+01,  1.58000e+00,  5.69020e+00,
        -1.07790e+00,  4.14510e+00,  2.18000e-02,  3.52370e+00,
         1.59545e+01,  2.28550e+00,  5.19460e+00, -1.42000e-02,
         5.85300e-01,  3.30000e-03]),
 'Am3': np.array([ 0.4239, 19.5739,  1.4573,  5.8722, -0.9052,  3.9682,  0.0238,
         2.8622, 14.7328,  2.4099,  5.1439, -0.1326,  0.0309,  0.1233]),
 'Am4': np.array([ 0.3737, 17.8625,  1.3521,  6.0426, -0.7514,  3.7199,  0.0258,
         2.4141, 12.9478,  2.3687,  4.9447, -0.249 ,  0.0215,  0.2371]),
 'Am5': np.array([ 0.2956, 17.3725,  1.4525,  6.0734, -0.7755,  3.6619,  0.0277,
         2.0109, 12.0534,  2.4155,  4.8358, -0.2264,  0.0275,  0.2128]),
 'Am6': np.array([ 0.2302, 16.9533,  1.4864,  6.1159, -0.7457,  3.5426,  0.0294,
         1.6778, 11.3372,  2.4531,  4.7247, -0.2043,  0.0337,  0.1892]),
 'Am7': np.array([ 3.60100e-01,  1.27299e+01,  1.96400e+00,  5.12030e+00,
        -1.35600e+00,  3.71420e+00,  3.16000e-02,  1.88450e+00,
         9.16060e+00,  2.07460e+00,  4.04220e+00, -1.31800e-01,
         1.72270e+00,  2.00000e-03])}




def formFactor(qlength,A=None,a=None,B=None,b=None,C=None,c=None,D=None,Ap=None,ap=None,Bp=None,bp=None,Cp=None,cp=None,Dp=None,J=None,S=None,L=None,ion=None):
    if not ion is None:
        if not ion in magneticFormFactor:
            raise AttributeError('Magnetic Ion not found in database. Use custom values without providing an ion')
        A,a,B,b,C,c,D,Ap,ap,Bp,bp,Cp,cp,Dp = magneticFormFactor[ion]
    factor=(J*(J+1)-S*(S+1)+L*(L+1))/(3*J*(J+1)+S*(S+1)-L*(L+1))
    s = qlength/(np.pi*4)
    s2 = np.power(s,2.0)
    J0 = A*np.exp(-a*s2)+B*np.exp(-b*s2)+C*np.exp(-c*s2)+D
    J2 = s2*(Ap*np.exp(-ap*s2)+Bp*np.exp(-bp*s2)+Cp*np.exp(cp*s2)+Dp)
    return np.power(J0+J2*factor,2.0)