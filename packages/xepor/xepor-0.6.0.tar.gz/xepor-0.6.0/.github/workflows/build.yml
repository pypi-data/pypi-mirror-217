name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    # Allow this workflow to be run manually (pushing to testpypi instead of pypi)

env:
  python-version: '3.11'

jobs:
  build:
    name: Build sdist and (pure Python) wheel
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout current tag
        if: github.event_name == 'push' && github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Checkout full source code tree
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: ${{ env.python-version }}
      - name: Install tox
        run: |
          python -m pip install --upgrade tox
      - name: Generate version number without local part for TestPyPI
        if: github.event_name == 'workflow_dispatch'
        run: |
          python -m pip install --upgrade setuptools_scm
          echo "SETUPTOOLS_SCM_PRETEND_VERSION=$(python -c 'from setuptools_scm import _get_version as v, Configuration as C;c=C.from_file("./pyproject.toml");c.local_scheme="no-local-version";print(v(c))')" >> "$GITHUB_ENV"
      - name: Run basic tests
        run: |
          python -m tox
          python -m tox -e docs,doctests,linkcheck
      - name: Build packages
        run: |
          python -m tox -e build
      - uses: actions/upload-artifact@v3
        with:
          name: xepor-dists
          path: ./dist/xepor-*

  upload_github:
    name: Upload to Github Release
    needs: [build]
    runs-on: ubuntu-22.04
    if: github.repository == 'xepor/xepor' && github.event_name == 'push' && github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: xepor-dists
          path: dist
      - uses: softprops/action-gh-release@v1
        with:
          files: dist/xepor-*
          generate_release_notes: true

  upload_pypi_test:
    name: Upload to PyPI (test)
    needs: [build]
    runs-on: ubuntu-22.04
    if: github.repository == 'xepor/xepor'
    environment:
      name: staging
      url: https://test.pypi.org/p/xepor
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: xepor-dists
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

  upload_pypi:
    name: Upload to PyPI (prod)
    needs: [build]
    runs-on: ubuntu-22.04
    if: github.repository == 'xepor/xepor' && github.event_name == 'push' && github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
    environment:
      name: release
      url: https://pypi.org/p/xepor
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: xepor-dists
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
