[tool.poetry]
name = "psanalyzer"
version = "0.1.0"
description = "A tool which turns project repo into a SQLite3 database. Use it to query various info about it."
authors = ["Bohdan Vanieiev <warchantua@aptiv.com>"]
readme = "README.md"
packages = [{include = "psanalyzer"}]

[tool.poetry.dependencies]
python = "^3.7"
click = "^8.1.3"
sqlalchemy = "^2.0.17"
tqdm = "^4.65.0"
memoization = "^0.4.0"
tabulate = "^0.9.0"

[tool.poetry.scripts]
psanalyzer = 'psanalyzer.main:main'

[tool.isort]
line_length = 120
profile = "black"
skip_gitignore = true

[tool.black]
line-length = 120
target_version = ['py38', 'py39', 'py310', 'py311']

[tool.ruff]
line-length = 120
select = ["A", "E", "F", "B", "UP", "PIE", "TID", "Q", "PYI", "I", "YTT", "ICN", "C4", "ISC", "ANN204", "ANN205", "ANN206"]
src = ["psanalyzer"]
ignore = [
    # `pytest.raises(Exception)` should be considered evil
    "B017",
    # use of assert detected
    "S101",
    # line too long
    "E501",
    # module level import not at top of file
    "E402",
    # ambiguous variable name 'l'
    "E741",
    # import *
    "F403",
    "F405",
    # A001 variable "id" is shadowing a python builtin
    "A001",
    # A002 argument "dir" is shadowing a python builtin
    "A002",
    # A003 class attribute "range" is shadowing a python builtin
    "A003"
]
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
target-version = "py37"
exclude = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "build",
    "dist",
    "__pycache__",
    ".pytest_cache",
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
