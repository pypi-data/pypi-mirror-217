"""
    HCL AppScan on Cloud (v2)

    This API allows you to interact with the service. The API allows you to perform many of the operations available in the UI and more.</br>For authentication, use the relevant APIs in the Account section. A successful authentication response includes a bearer token for use in subsequent API calls. Pasting this token in the 'Access token' field above will automatically add the authorization header to any API call that requires a valid session.

    OpenAPI spec version: v2

    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

from pyasoc.configuration import Configuration


class SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel:
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "if_match": "object",
        "if_none_match": "object",
        "context": "SystemWebHttpODataODataQueryContext",
        "request": "object",
        "raw_values": "SystemWebHttpODataQueryODataRawQueryOptions",
        "select_expand": "SystemWebHttpODataQuerySelectExpandQueryOption",
        "filter": "SystemWebHttpODataQueryFilterQueryOption",
        "order_by": "SystemWebHttpODataQueryOrderByQueryOption",
        "skip": "SystemWebHttpODataQuerySkipQueryOption",
        "top": "SystemWebHttpODataQueryTopQueryOption",
        "inline_count": "SystemWebHttpODataQueryInlineCountQueryOption",
        "validator": "SystemWebHttpODataQueryValidatorsODataQueryValidator",
    }

    attribute_map = {
        "if_match": "IfMatch",
        "if_none_match": "IfNoneMatch",
        "context": "Context",
        "request": "Request",
        "raw_values": "RawValues",
        "select_expand": "SelectExpand",
        "filter": "Filter",
        "order_by": "OrderBy",
        "skip": "Skip",
        "top": "Top",
        "inline_count": "InlineCount",
        "validator": "Validator",
    }

    def __init__(
        self,
        if_match=None,
        if_none_match=None,
        context=None,
        request=None,
        raw_values=None,
        select_expand=None,
        filter=None,
        order_by=None,
        skip=None,
        top=None,
        inline_count=None,
        validator=None,
        _configuration=None,
    ):
        """SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel - a model defined in Swagger"""
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._if_match = None
        self._if_none_match = None
        self._context = None
        self._request = None
        self._raw_values = None
        self._select_expand = None
        self._filter = None
        self._order_by = None
        self._skip = None
        self._top = None
        self._inline_count = None
        self._validator = None
        self.discriminator = None

        if if_match is not None:
            self.if_match = if_match
        if if_none_match is not None:
            self.if_none_match = if_none_match
        if context is not None:
            self.context = context
        if request is not None:
            self.request = request
        if raw_values is not None:
            self.raw_values = raw_values
        if select_expand is not None:
            self.select_expand = select_expand
        if filter is not None:
            self.filter = filter
        if order_by is not None:
            self.order_by = order_by
        if skip is not None:
            self.skip = skip
        if top is not None:
            self.top = top
        if inline_count is not None:
            self.inline_count = inline_count
        if validator is not None:
            self.validator = validator

    @property
    def if_match(self):
        # type: () -> object
        """Gets the if_match of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :return: The if_match of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :rtype: object
        """
        return self._if_match

    @if_match.setter
    def if_match(self, if_match):
        """Sets the if_match of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :param if_match: The if_match of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :type: object
        """

        self._if_match = if_match

    @property
    def if_none_match(self):
        # type: () -> object
        """Gets the if_none_match of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :return: The if_none_match of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :rtype: object
        """
        return self._if_none_match

    @if_none_match.setter
    def if_none_match(self, if_none_match):
        """Sets the if_none_match of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :param if_none_match: The if_none_match of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :type: object
        """

        self._if_none_match = if_none_match

    @property
    def context(self):
        # type: () -> SystemWebHttpODataODataQueryContext
        """Gets the context of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :return: The context of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :rtype: SystemWebHttpODataODataQueryContext
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :param context: The context of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :type: SystemWebHttpODataODataQueryContext
        """

        self._context = context

    @property
    def request(self):
        # type: () -> object
        """Gets the request of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :return: The request of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :rtype: object
        """
        return self._request

    @request.setter
    def request(self, request):
        """Sets the request of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :param request: The request of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :type: object
        """

        self._request = request

    @property
    def raw_values(self):
        # type: () -> SystemWebHttpODataQueryODataRawQueryOptions
        """Gets the raw_values of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :return: The raw_values of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :rtype: SystemWebHttpODataQueryODataRawQueryOptions
        """
        return self._raw_values

    @raw_values.setter
    def raw_values(self, raw_values):
        """Sets the raw_values of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :param raw_values: The raw_values of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :type: SystemWebHttpODataQueryODataRawQueryOptions
        """

        self._raw_values = raw_values

    @property
    def select_expand(self):
        # type: () -> SystemWebHttpODataQuerySelectExpandQueryOption
        """Gets the select_expand of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :return: The select_expand of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :rtype: SystemWebHttpODataQuerySelectExpandQueryOption
        """
        return self._select_expand

    @select_expand.setter
    def select_expand(self, select_expand):
        """Sets the select_expand of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :param select_expand: The select_expand of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :type: SystemWebHttpODataQuerySelectExpandQueryOption
        """

        self._select_expand = select_expand

    @property
    def filter(self):
        # type: () -> SystemWebHttpODataQueryFilterQueryOption
        """Gets the filter of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :return: The filter of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :rtype: SystemWebHttpODataQueryFilterQueryOption
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :param filter: The filter of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :type: SystemWebHttpODataQueryFilterQueryOption
        """

        self._filter = filter

    @property
    def order_by(self):
        # type: () -> SystemWebHttpODataQueryOrderByQueryOption
        """Gets the order_by of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :return: The order_by of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :rtype: SystemWebHttpODataQueryOrderByQueryOption
        """
        return self._order_by

    @order_by.setter
    def order_by(self, order_by):
        """Sets the order_by of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :param order_by: The order_by of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :type: SystemWebHttpODataQueryOrderByQueryOption
        """

        self._order_by = order_by

    @property
    def skip(self):
        # type: () -> SystemWebHttpODataQuerySkipQueryOption
        """Gets the skip of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :return: The skip of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :rtype: SystemWebHttpODataQuerySkipQueryOption
        """
        return self._skip

    @skip.setter
    def skip(self, skip):
        """Sets the skip of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :param skip: The skip of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :type: SystemWebHttpODataQuerySkipQueryOption
        """

        self._skip = skip

    @property
    def top(self):
        # type: () -> SystemWebHttpODataQueryTopQueryOption
        """Gets the top of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :return: The top of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :rtype: SystemWebHttpODataQueryTopQueryOption
        """
        return self._top

    @top.setter
    def top(self, top):
        """Sets the top of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :param top: The top of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :type: SystemWebHttpODataQueryTopQueryOption
        """

        self._top = top

    @property
    def inline_count(self):
        # type: () -> SystemWebHttpODataQueryInlineCountQueryOption
        """Gets the inline_count of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :return: The inline_count of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :rtype: SystemWebHttpODataQueryInlineCountQueryOption
        """
        return self._inline_count

    @inline_count.setter
    def inline_count(self, inline_count):
        """Sets the inline_count of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :param inline_count: The inline_count of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :type: SystemWebHttpODataQueryInlineCountQueryOption
        """

        self._inline_count = inline_count

    @property
    def validator(self):
        # type: () -> SystemWebHttpODataQueryValidatorsODataQueryValidator
        """Gets the validator of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :return: The validator of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :rtype: SystemWebHttpODataQueryValidatorsODataQueryValidator
        """
        return self._validator

    @validator.setter
    def validator(self, validator):
        """Sets the validator of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.


        :param validator: The validator of this SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel.
        :type: SystemWebHttpODataQueryValidatorsODataQueryValidator
        """

        self._validator = validator

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in self.swagger_types.items():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SystemWebHttpODataQueryODataQueryOptionsUtilitiesIssueModel):
            return True

        return self.to_dict() != other.to_dict()
