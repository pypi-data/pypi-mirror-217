
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right,nonassoc:nonassoc?leftORleftANDleftCMP_OPnonassocNOTleftINleftRELATION_DEFTYPEDEF_INNEROPERAND_LISTEMPTYNS_REFVAR_REFMAP_LOOKUPleftCIDIDleft([leftMLSAND AS CID CMP_OP DEFINED DICT ELIF ELSE END ENTITY EXTENDS FALSE FLOAT FOR FSTRING ID IF IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS NOT NULL OR PARENTS PEQ REGEX REL RSTRING SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : head bodyhead : %prec EMPTYhead : MLSbody : top_stmt bodybody : emptytop_stmt : entity_def\n    | implement_def\n    | implementation_def\n    | relation\n    | statement\n    | typedef\n    | index\n    | importempty : %prec EMPTYimport : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n    | for\n    | if\n    | expressionstmt_list : statement stmt_liststmt_list : emptyassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockif : IF if_body ENDif_body : expression \':\' stmt_list if_nextif_next : emptyif_next : ELSE \':\' stmt_listif_next : ELIF if_bodyentity_def : ENTITY CID \':\' entity_body_outerentity_def : ENTITY ID \':\' entity_body_outerentity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outerentity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outerentity_body_outer : MLS entity_body ENDentity_body_outer : entity_body ENDentity_body_outer : ENDentity_body_outer : MLS ENDentity_body : entity_body attrentity_body : attrattr_base_type : ns_refattr_type_multi : attr_base_type \'[\' \']\'attr_type_opt : attr_type_multi \'?\'\n    | attr_base_type \'?\'attr_type : attr_type_opt\n    | attr_type_multi\n    | attr_base_typeattr : attr_type CID empty\n    | attr_type CID \'=\' constant\n    | attr_type CID \'=\' constant_list\n    | attr_type CID \'=\' UNDEFattr : attr_type IDattr : attr_type ID \'=\' constant\n    | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr : DICT empty CID empty\n    | DICT empty CID \'=\' map_def\n    | DICT empty CID \'=\' NULL\n    | DICT \'?\' CID empty\n    | DICT \'?\'  CID \'=\' map_def\n    | DICT \'?\'  CID \'=\' NULLattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_ns_list : ns_refimplement_ns_list : PARENTSimplement_ns_list : implement_ns_list \',\' implement_ns_listimplement_def : IMPLEMENT class_ref USING implement_ns_list empty\n    | IMPLEMENT class_ref USING implement_ns_list MLSimplement_def : IMPLEMENT class_ref USING implement_ns_list WHEN expression empty\n    | IMPLEMENT class_ref USING implement_ns_list WHEN expression MLSimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : implementation_head blockimplementation_head : \':\'implementation_head : \':\' MLSblock : stmt_list ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID MLSrelation : relation_def MLSrelation : relation_def %prec RELATION_DEFrelation_def : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi REL class_refrelation_def : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\'multi : \'[\' INT \':\' \']\'multi : \'[\' INT \':\' INT \']\'multi : \'[\'  \':\' INT \']\'typedef : typedef_inner %prec TYPEDEF_INNERtypedef : typedef_inner MLStypedef_inner : TYPEDEF ID AS ns_ref MATCHING expressiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\'expression : boolean_expression\n    | constant\n    | function_call\n    | var_ref %prec VAR_REF\n    | constructor\n    | list_def\n    | list_comprehension\n    | map_def\n    | map_lookup %prec MAP_LOOKUP\n    | index_lookup\n    | conditional_expressionexpression : \'(\' expression \')\'boolean_expression : expression CMP_OP expression\n    | expression IN expression\n    | expression AND expression\n    | expression OR expressionboolean_expression : NOT expressionboolean_expression : var_ref \'.\' ID IS DEFINEDboolean_expression : ID IS DEFINEDboolean_expression : map_lookup IS DEFINEDoperand : expressionmap_lookup : attr_ref \'[\' operand \']\'\n    | var_ref \'[\' operand \']\'\n    | map_lookup \'[\' operand \']\'constructor : class_ref \'(\' param_list \')\'function_call : ns_ref \'(\' function_param_list \')\'function_call : attr_ref \'(\' function_param_list \')\'list_def : \'[\' operand_list \']\'list_comprehension : \'[\' expression list_comprehension_for list_comprehension_guard \']\'list_comprehension_for_empty : emptylist_comprehension_for : FOR ID IN expression list_comprehension_for_empty\n    | FOR ID IN expression list_comprehension_forlist_comprehension_guard : emptylist_comprehension_guard : IF expression list_comprehension_guarddict_key : RSTRINGdict_key : STRINGpair_list : dict_key \':\' operand \',\' pair_list\n    | dict_key \':\' operand empty pair_list_emptypair_list : pair_list_empty\n    pair_list_empty : emptymap_def : \'{\' pair_list \'}\'index_lookup : class_ref \'[\' param_list \']\'index_lookup : attr_ref \'[\' param_list \']\'conditional_expression : expression \'?\' expression \':\' expressionconstant : INT\n    | FLOAT\n    constant : NULLconstant : REGEXconstant : TRUEconstant : FALSEconstant : STRINGconstant : FSTRINGconstant : RSTRINGconstant : MLSconstant_list : \'[\' constants \']\'constants : constantconstants :constants : constant \',\' constantswrapped_kwargs : \'*\' \'*\' operandparam_list_element : ID \'=\' operandparam_list_element : wrapped_kwargsparam_list : param_list_empty\n    param_list_empty : emptyparam_list : param_list_element empty param_list_empty\n    | param_list_element \',\' param_listfunction_param_list_element : param_list_elementfunction_param_list_element : operandfunction_param_list : function_param_list_empty\n    function_param_list_empty : emptyfunction_param_list : function_param_list_element empty function_param_list_empty\n    | function_param_list_element \',\' function_param_listoperand_list : operand \',\' operand_listoperand_list : operandoperand_list : %prec OPERAND_LISTvar_ref : attr_ref %prec VAR_REFattr_ref : var_ref \'.\' IDvar_ref : ns_ref %prec NS_REFclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref : var_ref \'.\' CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : ID'
    
_lr_action_items = {'ENTITY':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,66,79,80,83,84,85,86,88,103,117,131,132,133,134,139,144,145,153,154,155,156,157,159,161,168,172,174,177,189,191,192,193,199,204,210,211,215,221,223,225,226,227,235,236,250,251,255,264,265,269,273,280,285,294,297,298,299,302,303,304,305,306,309,313,332,333,334,335,338,351,356,357,],[-2,15,-3,15,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,-182,-82,-93,-100,-182,-173,-171,-15,-113,-115,-109,-110,-111,-112,-108,-175,-181,-117,-176,-172,-23,-24,-26,-116,-124,-137,-31,-37,-32,-14,-68,-69,-121,-138,-16,-122,-119,-120,-95,-123,-118,-139,-38,-36,-71,-72,-88,-140,-75,-96,-114,-125,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IMPLEMENT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,66,79,80,83,84,85,86,88,103,117,131,132,133,134,139,144,145,153,154,155,156,157,159,161,168,172,174,177,189,191,192,193,199,204,210,211,215,221,223,225,226,227,235,236,250,251,255,264,265,269,273,280,285,294,297,298,299,302,303,304,305,306,309,313,332,333,334,335,338,351,356,357,],[-2,18,-3,18,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,-182,-82,-93,-100,-182,-173,-171,-15,-113,-115,-109,-110,-111,-112,-108,-175,-181,-117,-176,-172,-23,-24,-26,-116,-124,-137,-31,-37,-32,-14,-68,-69,-121,-138,-16,-122,-119,-120,-95,-123,-118,-139,-38,-36,-71,-72,-88,-140,-75,-96,-114,-125,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IMPLEMENTATION':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,66,79,80,83,84,85,86,88,103,117,131,132,133,134,139,144,145,153,154,155,156,157,159,161,168,172,174,177,189,191,192,193,199,204,210,211,215,221,223,225,226,227,235,236,250,251,255,264,265,269,273,280,285,294,297,298,299,302,303,304,305,306,309,313,332,333,334,335,338,351,356,357,],[-2,22,-3,22,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,-182,-82,-93,-100,-182,-173,-171,-15,-113,-115,-109,-110,-111,-112,-108,-175,-181,-117,-176,-172,-23,-24,-26,-116,-124,-137,-31,-37,-32,-14,-68,-69,-121,-138,-16,-122,-119,-120,-95,-123,-118,-139,-38,-36,-71,-72,-88,-140,-75,-96,-114,-125,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'INDEX':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,66,79,80,83,84,85,86,88,103,117,131,132,133,134,139,144,145,153,154,155,156,157,159,161,168,172,174,177,189,191,192,193,199,204,210,211,215,221,223,225,226,227,235,236,250,251,255,264,265,269,273,280,285,294,297,298,299,302,303,304,305,306,309,313,332,333,334,335,338,351,356,357,],[-2,29,-3,29,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,-182,-82,-93,-100,-182,-173,-171,-15,-113,-115,-109,-110,-111,-112,-108,-175,-181,-117,-176,-172,-23,-24,-26,-116,-124,-137,-31,-37,-32,-14,-68,-69,-121,-138,-16,-122,-119,-120,-95,-123,-118,-139,-38,-36,-71,-72,-88,-140,-75,-96,-114,-125,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IMPORT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,66,79,80,83,84,85,86,88,103,117,131,132,133,134,139,144,145,153,154,155,156,157,159,161,168,172,174,177,189,191,192,193,199,204,210,211,215,221,223,225,226,227,235,236,250,251,255,264,265,269,273,280,285,294,297,298,299,302,303,304,305,306,309,313,332,333,334,335,338,351,356,357,],[-2,31,-3,31,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,-182,-82,-93,-100,-182,-173,-171,-15,-113,-115,-109,-110,-111,-112,-108,-175,-181,-117,-176,-172,-23,-24,-26,-116,-124,-137,-31,-37,-32,-14,-68,-69,-121,-138,-16,-122,-119,-120,-95,-123,-118,-139,-38,-36,-71,-72,-88,-140,-75,-96,-114,-125,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'CID':([0,2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,20,21,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,66,72,73,74,75,76,79,80,83,84,85,86,88,89,90,91,92,93,94,98,101,102,103,106,114,116,117,119,131,132,133,134,136,137,139,140,141,144,145,153,154,155,156,157,159,160,161,164,168,171,172,173,174,177,179,180,181,182,183,184,189,191,192,193,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,232,235,236,240,241,243,244,247,248,250,251,252,254,255,258,259,264,265,266,267,268,269,273,277,279,280,282,285,293,294,297,298,299,302,303,304,305,306,308,309,311,313,332,333,334,335,338,351,356,357,],[-2,16,-3,16,-6,-7,-8,-9,-10,-11,-12,-13,60,-174,-182,16,-150,-20,-83,-17,-18,-19,-92,16,16,-173,-100,16,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,100,-171,16,-141,-142,-143,-144,-145,-146,-147,-148,-149,16,-182,16,16,16,16,16,-82,-93,-100,-182,-173,-171,-15,144,16,154,16,16,16,16,16,16,-113,-169,16,16,-115,154,-109,-110,-111,-112,16,16,-108,154,144,-175,-181,-117,-176,-172,-23,-24,-26,16,-116,16,-124,16,-137,16,-31,-37,238,-14,-45,-46,-47,-41,-32,-14,-68,-69,16,-121,16,16,-138,16,-16,-122,16,-119,16,-100,-173,-120,-95,-123,-118,-139,16,-168,-38,-36,289,290,-43,-44,16,16,-71,-72,16,16,-88,16,16,-140,-75,16,-77,16,-96,-114,16,16,-125,16,-35,-42,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,16,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'FOR':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,66,77,79,80,83,84,85,86,88,103,105,117,131,132,133,134,139,144,145,153,154,155,156,157,159,160,161,168,172,174,177,189,191,192,193,199,204,210,211,215,217,219,220,221,223,225,226,227,235,236,250,251,255,264,265,266,267,268,269,273,280,285,294,297,298,299,302,303,304,305,306,308,309,311,313,315,332,333,334,335,338,351,356,357,],[-2,23,-3,23,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,-182,136,-82,-93,-100,-182,-173,-171,-15,-113,170,-115,-109,-110,-111,-112,-108,-175,-181,-117,-176,-172,-23,-24,-26,23,-116,-124,-137,-31,-37,-32,-14,-68,-69,-121,-138,-16,-122,-119,23,-100,-173,-120,-95,-123,-118,-139,-38,-36,-71,-72,-88,-140,-75,23,-77,23,-96,-114,-125,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,23,-94,170,-73,-74,-80,-90,-79,-81,-84,-86,]),'IF':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,66,79,80,83,84,85,86,88,103,117,131,132,133,134,139,144,145,153,154,155,156,157,159,160,161,168,169,172,174,177,189,191,192,193,199,204,210,211,215,217,219,220,221,223,225,226,227,235,236,250,251,255,264,265,266,267,268,269,273,280,281,285,294,297,298,299,302,303,304,305,306,308,309,311,313,315,332,333,334,335,338,340,341,342,351,356,357,],[-2,34,-3,34,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,-182,-82,-93,-100,-182,-173,-171,-15,-113,-115,-109,-110,-111,-112,-108,-175,-181,-117,-176,-172,-23,-24,-26,34,-116,-124,230,-137,-31,-37,-32,-14,-68,-69,-121,-138,-16,-122,-119,34,-100,-173,-120,-95,-123,-118,-139,-38,-36,-71,-72,-88,-140,-75,34,-77,34,-96,-114,-125,230,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,34,-94,-14,-73,-74,-80,-90,-79,-127,-128,-126,-81,-84,-86,]),'(':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,19,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,66,72,73,74,75,76,79,80,81,83,84,85,86,87,88,90,92,93,94,98,101,102,103,117,131,132,133,134,137,139,144,145,152,153,154,155,156,157,159,160,161,168,171,172,173,174,177,189,191,192,193,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,224,225,226,227,230,235,236,250,251,252,255,264,265,266,267,268,269,273,277,279,280,282,285,294,297,298,299,302,303,304,305,306,308,309,311,313,332,333,334,335,338,351,356,357,],[-2,30,-3,30,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,70,-150,-20,-83,-17,-18,-19,-92,30,90,-100,30,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,101,30,-141,-142,-143,-144,-145,-146,-147,-148,-149,30,-182,30,30,30,30,30,-82,-93,138,-100,-182,90,101,70,-15,30,30,30,30,30,30,30,-113,-115,-109,-110,-111,-112,30,-108,-175,-181,-182,-117,-176,-172,-23,-24,-26,30,-116,-124,30,-137,30,-31,-37,-32,-14,-68,-69,30,-121,30,30,-138,30,-16,-122,30,-119,30,-100,90,-120,-95,70,-123,-118,-139,30,-38,-36,-71,-72,30,-88,-140,-75,30,-77,30,-96,-114,30,30,-125,30,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,30,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'TYPEDEF':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,66,79,80,83,84,85,86,88,103,117,131,132,133,134,139,144,145,153,154,155,156,157,159,161,168,172,174,177,189,191,192,193,199,204,210,211,215,221,223,225,226,227,235,236,250,251,255,264,265,269,273,280,285,294,297,298,299,302,303,304,305,306,309,313,332,333,334,335,338,351,356,357,],[-2,45,-3,45,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,-182,-82,-93,-100,-182,-173,-171,-15,-113,-115,-109,-110,-111,-112,-108,-175,-181,-117,-176,-172,-23,-24,-26,-116,-124,-137,-31,-37,-32,-14,-68,-69,-121,-138,-16,-122,-119,-120,-95,-123,-118,-139,-38,-36,-71,-72,-88,-140,-75,-96,-114,-125,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'ID':([0,2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,66,69,70,71,72,73,74,75,76,79,80,83,84,85,86,88,89,90,91,92,93,94,98,101,102,103,106,113,114,115,116,117,118,119,131,132,133,134,136,137,138,139,140,141,142,143,144,145,153,154,155,156,157,159,160,161,163,164,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,191,192,193,198,199,201,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,232,234,235,236,237,238,239,241,242,243,244,246,247,248,249,250,251,252,253,254,255,258,259,264,265,266,267,268,269,270,273,277,279,280,282,285,286,289,290,291,293,294,297,298,299,300,302,303,304,305,306,308,309,311,313,318,319,320,322,323,324,325,327,330,331,332,333,334,335,336,337,338,345,346,347,348,349,350,351,354,356,357,],[-2,17,-3,17,-6,-7,-8,-9,-10,-11,-12,-13,61,-174,-182,66,68,-150,-20,77,78,-83,-17,-18,-19,-92,66,84,66,-173,-100,84,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,99,-171,84,-141,-142,-143,-144,-145,-146,-147,-148,-149,84,-182,122,127,127,84,84,84,84,84,-82,-93,-100,-182,-173,-171,-15,145,152,155,84,84,84,84,152,152,-113,-169,66,66,66,66,-115,66,194,-109,-110,-111,-112,66,84,209,-108,155,145,210,145,-175,-181,-117,-176,-172,-23,-24,-26,84,-116,66,66,-124,231,84,-137,84,-31,66,66,-37,-40,239,242,-45,-46,-47,-41,-32,-14,-68,-69,84,-121,127,84,84,-138,84,-16,-122,152,-119,84,-100,-173,-120,-95,-123,-118,-139,84,-168,66,-38,-36,-39,-14,-52,291,-62,-43,-44,66,66,66,66,-71,-72,84,66,66,-88,66,66,-140,-75,84,-77,84,-96,209,-114,84,84,-125,84,-35,-48,-14,-14,-65,-42,-33,-34,-14,-70,334,-89,-91,-85,-87,-76,-78,-25,84,-94,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-73,-74,-80,-90,352,353,-79,-57,-58,-60,-61,-66,-67,-81,-151,-84,-86,]),'NOT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,66,72,73,74,75,76,79,80,83,84,85,86,88,90,92,93,94,98,101,102,103,117,131,132,133,134,137,139,144,145,153,154,155,156,157,159,160,161,168,171,172,173,174,177,189,191,192,193,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,235,236,250,251,252,255,264,265,266,267,268,269,273,277,279,280,282,285,294,297,298,299,302,303,304,305,306,308,309,311,313,332,333,334,335,338,351,356,357,],[-2,47,-3,47,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,47,-173,-100,47,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,47,-141,-142,-143,-144,-145,-146,-147,-148,-149,47,-182,47,47,47,47,47,-82,-93,-100,-182,-173,-171,-15,47,47,47,47,47,47,47,-113,-115,-109,-110,-111,-112,47,-108,-175,-181,-117,-176,-172,-23,-24,-26,47,-116,-124,47,-137,47,-31,-37,-32,-14,-68,-69,47,-121,47,47,-138,47,-16,-122,47,-119,47,-100,-173,-120,-95,-123,-118,-139,47,-38,-36,-71,-72,47,-88,-140,-75,47,-77,47,-96,-114,47,47,-125,47,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,47,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'INT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,66,72,73,74,75,76,79,80,83,84,85,86,88,90,92,93,94,98,101,102,103,117,121,131,132,133,134,137,139,144,145,153,154,155,156,157,159,160,161,168,171,172,173,174,177,189,191,192,193,197,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,235,236,250,251,252,255,256,264,265,266,267,268,269,273,277,279,280,282,285,287,288,294,297,298,299,302,303,304,305,306,308,309,311,313,321,332,333,334,335,338,351,355,356,357,],[-2,48,-3,48,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,48,-173,-100,48,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,48,-141,-142,-143,-144,-145,-146,-147,-148,-149,48,-182,48,48,48,48,48,-82,-93,-100,-182,-173,-171,-15,48,48,48,48,48,48,48,-113,-115,196,-109,-110,-111,-112,48,-108,-175,-181,-117,-176,-172,-23,-24,-26,48,-116,-124,48,-137,48,-31,-37,-32,-14,-68,-69,257,48,-121,48,48,-138,48,-16,-122,48,-119,48,-100,-173,-120,-95,-123,-118,-139,48,-38,-36,-71,-72,48,-88,301,-140,-75,48,-77,48,-96,-114,48,48,-125,48,-35,48,48,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,48,-94,48,-73,-74,-80,-90,-79,-81,48,-84,-86,]),'FLOAT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,66,72,73,74,75,76,79,80,83,84,85,86,88,90,92,93,94,98,101,102,103,117,131,132,133,134,137,139,144,145,153,154,155,156,157,159,160,161,168,171,172,173,174,177,189,191,192,193,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,235,236,250,251,252,255,264,265,266,267,268,269,273,277,279,280,282,285,287,288,294,297,298,299,302,303,304,305,306,308,309,311,313,321,332,333,334,335,338,351,355,356,357,],[-2,49,-3,49,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,49,-173,-100,49,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,49,-141,-142,-143,-144,-145,-146,-147,-148,-149,49,-182,49,49,49,49,49,-82,-93,-100,-182,-173,-171,-15,49,49,49,49,49,49,49,-113,-115,-109,-110,-111,-112,49,-108,-175,-181,-117,-176,-172,-23,-24,-26,49,-116,-124,49,-137,49,-31,-37,-32,-14,-68,-69,49,-121,49,49,-138,49,-16,-122,49,-119,49,-100,-173,-120,-95,-123,-118,-139,49,-38,-36,-71,-72,49,-88,-140,-75,49,-77,49,-96,-114,49,49,-125,49,-35,49,49,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,49,-94,49,-73,-74,-80,-90,-79,-81,49,-84,-86,]),'NULL':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,66,72,73,74,75,76,79,80,83,84,85,86,88,90,92,93,94,98,101,102,103,117,131,132,133,134,137,139,144,145,153,154,155,156,157,159,160,161,168,171,172,173,174,177,189,191,192,193,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,235,236,250,251,252,255,264,265,266,267,268,269,273,277,279,280,282,285,287,288,292,294,297,298,299,302,303,304,305,306,308,309,311,313,321,326,328,329,332,333,334,335,338,351,355,356,357,],[-2,50,-3,50,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,50,-173,-100,50,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,50,-141,-142,-143,-144,-145,-146,-147,-148,-149,50,-182,50,50,50,50,50,-82,-93,-100,-182,-173,-171,-15,50,50,50,50,50,50,50,-113,-115,-109,-110,-111,-112,50,-108,-175,-181,-117,-176,-172,-23,-24,-26,50,-116,-124,50,-137,50,-31,-37,-32,-14,-68,-69,50,-121,50,50,-138,50,-16,-122,50,-119,50,-100,-173,-120,-95,-123,-118,-139,50,-38,-36,-71,-72,50,-88,-140,-75,50,-77,50,-96,-114,50,50,-125,50,-35,50,50,331,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,50,-94,50,346,348,350,-73,-74,-80,-90,-79,-81,50,-84,-86,]),'REGEX':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,66,72,73,74,75,76,79,80,83,84,85,86,88,90,92,93,94,98,101,102,103,117,131,132,133,134,137,139,144,145,153,154,155,156,157,159,160,161,168,171,172,173,174,177,189,191,192,193,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,235,236,250,251,252,255,264,265,266,267,268,269,273,277,279,280,282,285,287,288,294,297,298,299,302,303,304,305,306,308,309,311,313,321,332,333,334,335,338,351,355,356,357,],[-2,51,-3,51,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,51,-173,-100,51,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,51,-141,-142,-143,-144,-145,-146,-147,-148,-149,51,-182,51,51,51,51,51,-82,-93,-100,-182,-173,-171,-15,51,51,51,51,51,51,51,-113,-115,-109,-110,-111,-112,51,-108,-175,-181,-117,-176,-172,-23,-24,-26,51,-116,-124,51,-137,51,-31,-37,-32,-14,-68,-69,51,-121,51,51,-138,51,-16,-122,51,-119,51,-100,-173,-120,-95,-123,-118,-139,51,-38,-36,-71,-72,51,-88,-140,-75,51,-77,51,-96,-114,51,51,-125,51,-35,51,51,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,51,-94,51,-73,-74,-80,-90,-79,-81,51,-84,-86,]),'TRUE':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,66,72,73,74,75,76,79,80,83,84,85,86,88,90,92,93,94,98,101,102,103,117,131,132,133,134,137,139,144,145,153,154,155,156,157,159,160,161,168,171,172,173,174,177,189,191,192,193,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,235,236,250,251,252,255,264,265,266,267,268,269,273,277,279,280,282,285,287,288,294,297,298,299,302,303,304,305,306,308,309,311,313,321,332,333,334,335,338,351,355,356,357,],[-2,52,-3,52,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,52,-173,-100,52,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,52,-141,-142,-143,-144,-145,-146,-147,-148,-149,52,-182,52,52,52,52,52,-82,-93,-100,-182,-173,-171,-15,52,52,52,52,52,52,52,-113,-115,-109,-110,-111,-112,52,-108,-175,-181,-117,-176,-172,-23,-24,-26,52,-116,-124,52,-137,52,-31,-37,-32,-14,-68,-69,52,-121,52,52,-138,52,-16,-122,52,-119,52,-100,-173,-120,-95,-123,-118,-139,52,-38,-36,-71,-72,52,-88,-140,-75,52,-77,52,-96,-114,52,52,-125,52,-35,52,52,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,52,-94,52,-73,-74,-80,-90,-79,-81,52,-84,-86,]),'FALSE':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,66,72,73,74,75,76,79,80,83,84,85,86,88,90,92,93,94,98,101,102,103,117,131,132,133,134,137,139,144,145,153,154,155,156,157,159,160,161,168,171,172,173,174,177,189,191,192,193,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,235,236,250,251,252,255,264,265,266,267,268,269,273,277,279,280,282,285,287,288,294,297,298,299,302,303,304,305,306,308,309,311,313,321,332,333,334,335,338,351,355,356,357,],[-2,53,-3,53,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,53,-173,-100,53,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,53,-141,-142,-143,-144,-145,-146,-147,-148,-149,53,-182,53,53,53,53,53,-82,-93,-100,-182,-173,-171,-15,53,53,53,53,53,53,53,-113,-115,-109,-110,-111,-112,53,-108,-175,-181,-117,-176,-172,-23,-24,-26,53,-116,-124,53,-137,53,-31,-37,-32,-14,-68,-69,53,-121,53,53,-138,53,-16,-122,53,-119,53,-100,-173,-120,-95,-123,-118,-139,53,-38,-36,-71,-72,53,-88,-140,-75,53,-77,53,-96,-114,53,53,-125,53,-35,53,53,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,53,-94,53,-73,-74,-80,-90,-79,-81,53,-84,-86,]),'STRING':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,66,72,73,74,75,76,79,80,83,84,85,86,88,90,92,93,94,98,101,102,103,117,131,132,133,134,137,139,144,145,153,154,155,156,157,159,160,161,168,171,172,173,174,177,189,191,192,193,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,235,236,250,251,252,255,264,265,266,267,268,269,273,277,279,280,282,283,285,287,288,294,297,298,299,302,303,304,305,306,308,309,311,313,321,332,333,334,335,338,351,355,356,357,],[-2,54,-3,54,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,54,-173,-100,54,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,54,-141,-142,-143,-144,-145,-146,-147,-148,-149,54,112,-182,54,54,54,54,54,-82,-93,-100,-182,-173,-171,-15,54,54,54,54,54,54,54,-113,-115,-109,-110,-111,-112,54,-108,-175,-181,-117,-176,-172,-23,-24,-26,54,-116,-124,54,-137,54,-31,-37,-32,-14,-68,-69,54,-121,54,54,-138,54,-16,-122,54,-119,54,-100,-173,-120,-95,-123,-118,-139,54,-38,-36,-71,-72,54,-88,-140,-75,54,-77,54,-96,-114,54,54,-125,54,112,-35,54,54,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,54,-94,54,-73,-74,-80,-90,-79,-81,54,-84,-86,]),'FSTRING':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,66,72,73,74,75,76,79,80,83,84,85,86,88,90,92,93,94,98,101,102,103,117,131,132,133,134,137,139,144,145,153,154,155,156,157,159,160,161,168,171,172,173,174,177,189,191,192,193,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,235,236,250,251,252,255,264,265,266,267,268,269,273,277,279,280,282,285,287,288,294,297,298,299,302,303,304,305,306,308,309,311,313,321,332,333,334,335,338,351,355,356,357,],[-2,55,-3,55,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,55,-173,-100,55,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,55,-141,-142,-143,-144,-145,-146,-147,-148,-149,55,-182,55,55,55,55,55,-82,-93,-100,-182,-173,-171,-15,55,55,55,55,55,55,55,-113,-115,-109,-110,-111,-112,55,-108,-175,-181,-117,-176,-172,-23,-24,-26,55,-116,-124,55,-137,55,-31,-37,-32,-14,-68,-69,55,-121,55,55,-138,55,-16,-122,55,-119,55,-100,-173,-120,-95,-123,-118,-139,55,-38,-36,-71,-72,55,-88,-140,-75,55,-77,55,-96,-114,55,55,-125,55,-35,55,55,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,55,-94,55,-73,-74,-80,-90,-79,-81,55,-84,-86,]),'RSTRING':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,66,72,73,74,75,76,79,80,83,84,85,86,88,90,92,93,94,98,101,102,103,117,131,132,133,134,137,139,144,145,153,154,155,156,157,159,160,161,168,171,172,173,174,177,189,191,192,193,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,235,236,250,251,252,255,264,265,266,267,268,269,273,277,279,280,282,283,285,287,288,294,297,298,299,302,303,304,305,306,308,309,311,313,321,332,333,334,335,338,351,355,356,357,],[-2,56,-3,56,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,56,-173,-100,56,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,56,-141,-142,-143,-144,-145,-146,-147,-148,-149,56,111,-182,56,56,56,56,56,-82,-93,-100,-182,-173,-171,-15,56,56,56,56,56,56,56,-113,-115,-109,-110,-111,-112,56,-108,-175,-181,-117,-176,-172,-23,-24,-26,56,-116,-124,56,-137,56,-31,-37,-32,-14,-68,-69,56,-121,56,56,-138,56,-16,-122,56,-119,56,-100,-173,-120,-95,-123,-118,-139,56,-38,-36,-71,-72,56,-88,-140,-75,56,-77,56,-96,-114,56,56,-125,56,111,-35,56,56,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,56,-94,56,-73,-74,-80,-90,-79,-81,56,-84,-86,]),'MLS':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,66,72,73,74,75,76,79,80,83,84,85,86,88,90,92,93,94,98,101,102,103,113,115,117,131,132,133,134,137,139,144,145,153,154,155,156,157,159,160,161,168,171,172,173,174,177,189,191,192,193,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,235,236,246,249,250,251,252,255,264,265,266,267,268,269,273,277,279,280,282,285,287,288,294,297,298,299,302,303,304,305,306,308,309,311,313,321,332,333,334,335,338,351,355,356,357,],[3,20,-3,20,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,79,-17,-18,-19,80,20,-173,-100,20,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,20,-141,-142,-143,-144,-145,-146,-147,-148,-149,20,-182,20,20,20,20,20,-82,-93,-100,-182,-173,-171,-15,20,20,20,20,20,20,20,-113,175,175,-115,-109,-110,-111,-112,20,-108,-175,-181,-117,-176,-172,-23,-24,-26,20,-116,-124,20,-137,20,-31,-37,-32,251,-68,-69,20,-121,20,20,-138,20,-16,-122,20,-119,20,-100,-173,-120,-95,-123,-118,-139,20,-38,-36,175,175,-71,-72,20,-88,-140,-75,20,308,20,-96,-114,20,20,-125,20,-35,20,20,-33,-34,333,-70,-89,-91,-85,-87,-76,-78,-25,20,-94,20,-73,-74,351,-90,-79,-81,20,-84,-86,]),'[':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,19,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,66,68,72,73,74,75,76,79,80,83,84,85,86,87,88,90,92,93,94,98,101,102,103,117,122,131,132,133,134,137,139,144,145,152,153,154,155,156,157,159,160,161,168,171,172,173,174,177,183,184,189,191,192,193,195,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,235,236,250,251,252,255,264,265,266,267,268,269,273,277,279,280,282,285,287,288,294,297,298,299,302,303,304,305,306,308,309,311,313,332,333,334,335,338,351,352,353,356,357,],[-2,57,-3,57,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,71,-150,-20,-83,-17,-18,-19,-92,57,-173,94,57,-97,-98,-99,-101,-102,-103,-104,98,-106,-107,102,57,-141,-142,-143,-144,-145,-146,-147,-148,-149,57,-182,121,57,57,57,57,57,-82,-93,94,-182,-173,102,71,-15,57,57,57,57,57,57,57,-113,-115,121,-109,-110,-111,-112,57,-108,-175,-181,-182,-117,-176,-172,-23,-24,-26,57,-116,-124,57,-137,57,-31,-37,245,-41,-32,-14,-68,-69,121,57,-121,57,57,-138,57,-16,-122,57,-119,57,94,-173,-120,-95,-123,-118,-139,57,-38,-36,-71,-72,57,-88,-140,-75,57,-77,57,-96,-114,57,57,-125,57,-35,321,321,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,57,-94,-73,-74,-80,-90,-79,-81,121,121,-84,-86,]),'{':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,66,72,73,74,75,76,79,80,83,84,85,86,88,90,92,93,94,98,101,102,103,117,131,132,133,134,137,139,144,145,153,154,155,156,157,159,160,161,168,171,172,173,174,177,189,191,192,193,198,199,202,203,204,205,210,211,213,215,217,219,220,221,223,225,226,227,230,235,236,250,251,252,255,264,265,266,267,268,269,273,277,279,280,282,285,292,294,297,298,299,302,303,304,305,306,308,309,311,313,326,328,329,332,333,334,335,338,351,356,357,],[-2,58,-3,58,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,58,-173,-100,58,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,58,-141,-142,-143,-144,-145,-146,-147,-148,-149,58,-182,58,58,58,58,58,-82,-93,-100,-182,-173,-171,-15,58,58,58,58,58,58,58,-113,-115,-109,-110,-111,-112,58,-108,-175,-181,-117,-176,-172,-23,-24,-26,58,-116,-124,58,-137,58,-31,-37,-32,-14,-68,-69,58,-121,58,58,-138,58,-16,-122,58,-119,58,-100,-173,-120,-95,-123,-118,-139,58,-38,-36,-71,-72,58,-88,-140,-75,58,-77,58,-96,-114,58,58,-125,58,-35,58,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,58,-94,58,58,58,-73,-74,-80,-90,-79,-81,-84,-86,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,59,66,79,80,83,84,85,86,88,103,117,131,132,133,134,139,144,145,153,154,155,156,157,159,161,168,172,174,177,189,191,192,193,199,204,210,211,215,221,223,225,226,227,235,236,250,251,255,264,265,269,273,280,285,294,297,298,299,302,303,304,305,306,309,313,332,333,334,335,338,351,356,357,],[-2,0,-14,-3,-1,-14,-5,-6,-7,-8,-9,-10,-11,-12,-13,-174,-182,-150,-20,-83,-17,-18,-19,-92,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,-4,-182,-82,-93,-100,-182,-173,-171,-15,-113,-115,-109,-110,-111,-112,-108,-175,-181,-117,-176,-172,-23,-24,-26,-116,-124,-137,-31,-37,-32,-14,-68,-69,-121,-138,-16,-122,-119,-120,-95,-123,-118,-139,-38,-36,-71,-72,-88,-140,-75,-96,-114,-125,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'.':([16,17,19,32,33,46,64,65,66,67,83,84,85,86,144,145,152,154,155,187,188,194,219,220,304,305,],[-174,-182,69,-173,91,-171,-173,119,-182,-171,140,-182,-173,-171,-175,-181,-182,-176,-172,119,-173,-172,140,-173,336,337,]),'USING':([16,63,144,154,],[-174,118,-175,-176,]),',':([16,20,35,36,37,38,39,40,41,42,43,44,48,49,50,51,52,53,54,55,56,66,67,83,84,85,86,103,105,106,117,125,128,131,132,133,134,139,144,145,148,150,151,152,153,154,155,161,168,172,186,187,188,191,192,193,194,199,204,209,211,215,221,225,226,227,233,262,263,264,273,280,299,344,],[-174,-150,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-141,-142,-143,-144,-145,-146,-147,-148,-149,-182,-171,-100,-182,-173,-171,-113,-117,171,-115,201,-157,-109,-110,-111,-112,-108,-175,-181,213,-162,-163,-182,-117,-176,-172,-116,-124,-137,247,248,-173,253,-68,-69,-172,-121,-138,270,-122,-119,-120,-123,-118,-139,283,-156,-155,-140,-114,-125,253,355,]),':':([16,20,35,36,37,38,39,40,41,42,43,44,48,49,50,51,52,53,54,55,56,60,61,66,67,83,84,85,86,96,103,108,111,112,117,121,131,132,133,134,135,139,144,145,153,154,155,161,168,172,185,186,187,188,190,194,196,199,204,206,207,211,215,221,225,226,227,264,273,276,280,295,296,],[-174,-150,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-141,-142,-143,-144,-145,-146,-147,-148,-149,113,115,-182,-171,-100,-182,-173,-171,160,-113,173,-131,-132,-115,197,-109,-110,-111,-112,205,-108,-175,-181,-117,-176,-172,-116,-124,-137,246,-179,-180,-173,249,-172,256,-121,-138,267,268,-122,-119,-120,-123,-118,-139,-140,-114,311,-125,-177,-178,]),'SEP':([17,32,64,66,84,85,88,145,152,184,188,192,220,222,],[-182,89,89,-182,-182,141,143,-181,-182,143,89,143,141,143,]),'=':([17,32,33,46,84,127,145,152,155,219,220,238,239,242,289,290,291,],[-182,-173,92,-171,-182,202,-181,202,-172,92,-173,287,288,292,326,328,329,]),'PEQ':([17,32,33,46,84,145,155,219,220,],[-182,-173,93,-171,-182,-181,-172,93,-173,]),'CMP_OP':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,82,83,84,85,86,96,103,105,117,131,132,133,134,135,139,145,152,153,155,161,168,172,199,204,211,215,219,220,221,225,226,227,264,273,280,281,298,313,315,],[-182,-150,72,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,72,-100,-182,-173,-171,72,-113,72,-115,-109,-110,72,72,72,-108,-181,-182,72,-172,-116,-124,-137,-121,-138,-122,-119,-100,-173,-120,-123,-118,-139,72,-114,-125,72,72,72,72,]),'IN':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,78,82,83,84,85,86,96,103,105,117,131,132,133,134,135,139,145,152,153,155,161,168,172,199,204,211,215,219,220,221,225,226,227,231,264,273,280,281,298,313,315,],[-182,-150,73,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,137,73,-100,-182,-173,-171,73,73,73,-115,73,-110,73,73,73,-108,-181,-182,73,-172,-116,-124,-137,-121,-138,-122,-119,-100,-173,-120,-123,-118,-139,282,73,-114,-125,73,73,73,73,]),'AND':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,82,83,84,85,86,96,103,105,117,131,132,133,134,135,139,145,152,153,155,161,168,172,199,204,211,215,219,220,221,225,226,227,264,273,280,281,298,313,315,],[-182,-150,74,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,74,-100,-182,-173,-171,74,-113,74,-115,-109,-110,-111,74,74,-108,-181,-182,74,-172,-116,-124,-137,-121,-138,-122,-119,-100,-173,-120,-123,-118,-139,74,-114,-125,74,74,74,74,]),'OR':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,82,83,84,85,86,96,103,105,117,131,132,133,134,135,139,145,152,153,155,161,168,172,199,204,211,215,219,220,221,225,226,227,264,273,280,281,298,313,315,],[-182,-150,75,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,75,-100,-182,-173,-171,75,-113,75,-115,-109,-110,-111,-112,75,-108,-181,-182,75,-172,-116,-124,-137,-121,-138,-122,-119,-100,-173,-120,-123,-118,-139,75,-114,-125,75,75,75,75,]),'?':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,66,82,83,84,85,86,96,103,105,117,131,132,133,134,135,139,145,152,153,155,161,168,172,180,182,183,184,199,204,211,215,219,220,221,225,226,227,264,273,280,281,293,298,313,315,],[-182,-150,76,-173,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,-182,76,-100,-182,-173,-171,76,-113,76,-115,-109,-110,-111,-112,76,-108,-181,-182,76,-172,-116,-124,-137,241,243,244,-41,-121,-138,-122,-119,-100,-173,-120,-123,-118,-139,76,-114,-125,76,-42,76,76,76,]),'IS':([17,42,84,152,155,215,221,226,],[62,97,62,62,214,-119,-120,-118,]),')':([20,35,36,37,38,39,40,41,42,43,44,48,49,50,51,52,53,54,55,56,70,82,83,84,85,86,90,101,103,117,123,124,125,126,128,131,132,133,134,139,145,146,147,148,149,150,151,152,153,155,161,165,168,172,199,200,201,204,208,209,211,212,213,215,221,225,226,227,260,261,262,263,264,271,272,273,280,310,],[-150,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-141,-142,-143,-144,-145,-146,-147,-148,-149,-14,139,-100,-182,-173,-171,-14,-14,-113,-115,199,-158,-14,-159,-157,-109,-110,-111,-112,-108,-181,211,-164,-14,-165,-162,-163,-182,-117,-172,-116,225,-124,-137,-121,-14,-14,-138,269,-184,-122,-14,-14,-119,-120,-123,-118,-139,-160,-161,-156,-155,-140,-166,-167,-114,-125,-183,]),']':([20,35,36,37,38,39,40,41,42,43,44,48,49,50,51,52,53,54,55,56,57,71,83,84,85,86,102,103,104,105,106,117,124,125,126,128,130,131,132,133,134,139,145,152,153,155,158,161,162,166,167,168,169,171,172,196,199,200,201,204,211,215,221,225,226,227,228,229,232,245,256,257,260,261,262,263,264,273,280,281,301,314,315,321,340,341,342,343,344,355,358,],[-150,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-141,-142,-143,-144,-145,-146,-147,-148,-149,-170,-14,-100,-182,-173,-171,-14,-113,168,-117,-169,-115,-158,-14,-159,-157,204,-109,-110,-111,-112,-108,-181,-182,-117,-172,215,-116,221,226,227,-124,-14,-170,-137,255,-121,-14,-14,-138,-122,-119,-120,-123,-118,-139,280,-129,-168,293,302,303,-160,-161,-156,-155,-140,-114,-125,-14,335,-130,-14,-153,-127,-128,-126,354,-152,-153,-154,]),'ELSE':([20,21,25,26,27,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,83,84,85,86,103,117,131,132,133,134,139,145,153,155,156,157,159,160,161,168,172,199,204,211,215,216,217,218,219,220,221,225,226,227,264,273,278,280,309,338,],[-150,-20,-17,-18,-19,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,-100,-182,-173,-171,-113,-115,-109,-110,-111,-112,-108,-181,-117,-172,-23,-24,-26,-14,-116,-124,-137,-121,-138,-122,-119,276,-14,-22,-100,-173,-120,-123,-118,-139,-140,-114,-21,-125,-25,-79,]),'ELIF':([20,21,25,26,27,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,83,84,85,86,103,117,131,132,133,134,139,145,153,155,156,157,159,160,161,168,172,199,204,211,215,216,217,218,219,220,221,225,226,227,264,273,278,280,309,338,],[-150,-20,-17,-18,-19,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,-100,-182,-173,-171,-113,-115,-109,-110,-111,-112,-108,-181,-117,-172,-23,-24,-26,-14,-116,-124,-137,-121,-138,-122,-119,277,-14,-22,-100,-173,-120,-123,-118,-139,-140,-114,-21,-125,-25,-79,]),'END':([20,21,25,26,27,35,36,37,38,39,40,41,42,43,44,46,48,49,50,51,52,53,54,55,56,83,84,85,86,95,103,113,115,117,131,132,133,134,139,145,153,155,156,157,159,160,161,168,172,175,176,178,199,204,211,215,216,217,218,219,220,221,225,226,227,234,237,238,239,242,246,249,264,266,267,268,273,274,275,278,280,286,289,290,291,307,308,309,311,312,318,319,320,322,323,324,325,327,330,331,338,339,345,346,347,348,349,350,354,],[-150,-20,-17,-18,-19,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-171,-141,-142,-143,-144,-145,-146,-147,-148,-149,-100,-182,-173,-171,159,-113,177,177,-115,-109,-110,-111,-112,-108,-181,-117,-172,-23,-24,-26,-14,-116,-124,-137,235,236,-40,-121,-138,-122,-119,-14,-14,-22,-100,-173,-120,-123,-118,-139,285,-39,-14,-52,-62,177,177,-140,-14,-77,-14,-114,-27,-28,-21,-125,-48,-14,-14,-65,338,-78,-25,-14,-30,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-79,-29,-57,-58,-60,-61,-66,-67,-151,]),'}':([20,35,36,37,38,39,40,41,42,43,44,48,49,50,51,52,53,54,55,56,58,83,84,85,86,103,107,109,110,117,131,132,133,134,139,145,153,155,161,168,172,199,204,211,215,221,225,226,227,233,264,273,280,283,284,316,317,],[-150,-97,-98,-99,-101,-102,-103,-104,-105,-106,-107,-141,-142,-143,-144,-145,-146,-147,-148,-149,-14,-100,-182,-173,-171,-113,172,-136,-135,-115,-109,-110,-111,-112,-108,-181,-117,-172,-116,-124,-137,-121,-138,-122,-119,-120,-123,-118,-139,-14,-140,-114,-125,-14,-14,-133,-134,]),'DICT':([20,48,49,50,51,52,53,54,55,56,113,115,172,175,176,178,234,237,238,239,242,246,249,286,289,290,291,318,319,320,322,323,324,325,327,330,331,345,346,347,348,349,350,354,],[-150,-141,-142,-143,-144,-145,-146,-147,-148,-149,180,180,-137,180,180,-40,180,-39,-14,-52,-62,180,180,-48,-14,-14,-65,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-57,-58,-60,-61,-66,-67,-151,]),'EXTENDS':([60,61,],[114,116,]),'DEFINED':([62,97,214,],[117,161,273,]),'AS':([66,88,99,100,145,],[-182,142,163,164,-181,]),'WHEN':([66,145,191,192,193,299,],[-182,-181,252,-68,-69,-70,]),'MATCHING':([66,145,222,],[-182,-181,279,]),'*':([70,71,90,101,102,129,201,213,],[129,129,129,129,129,203,129,129,]),'PARENTS':([118,253,],[193,193,]),'REL':([120,198,255,302,303,335,],[195,258,-88,-89,-91,-90,]),'UNDEF':([287,288,],[320,324,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'head':([0,],[2,]),'body':([2,5,],[4,59,]),'top_stmt':([2,5,],[5,5,]),'empty':([2,5,58,70,71,90,101,102,125,148,160,169,180,191,200,201,212,213,216,217,233,238,266,268,281,283,284,289,290,298,311,315,],[6,6,109,126,126,149,149,126,200,212,218,229,240,250,126,126,149,149,275,218,284,286,218,218,229,109,109,325,327,332,218,342,]),'entity_def':([2,5,],[7,7,]),'implement_def':([2,5,],[8,8,]),'implementation_def':([2,5,],[9,9,]),'relation':([2,5,],[10,10,]),'statement':([2,5,160,217,266,268,311,],[11,11,217,217,217,217,217,]),'typedef':([2,5,],[12,12,]),'index':([2,5,],[13,13,]),'import':([2,5,],[14,14,]),'class_ref':([2,5,18,29,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,114,116,136,137,160,164,171,173,198,202,203,205,213,217,230,247,248,252,254,258,259,266,268,277,279,282,311,],[19,19,63,81,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,186,186,206,87,87,224,87,87,87,87,87,87,87,87,87,186,186,87,300,304,305,87,87,87,87,87,87,]),'expression':([2,5,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,137,160,171,173,198,202,203,205,213,217,230,252,266,268,277,279,282,311,],[21,21,82,96,103,105,131,132,133,134,135,153,153,153,153,153,153,153,153,21,153,153,153,153,153,264,153,21,281,298,21,21,96,313,315,21,]),'relation_def':([2,5,],[24,24,]),'assign':([2,5,160,217,266,268,311,],[25,25,25,25,25,25,25,]),'for':([2,5,160,217,266,268,311,],[26,26,26,26,26,26,26,]),'if':([2,5,160,217,266,268,311,],[27,27,27,27,27,27,27,]),'typedef_inner':([2,5,],[28,28,]),'ns_ref':([2,5,18,29,30,31,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,113,114,115,116,118,136,137,160,163,164,171,173,175,176,198,202,203,205,213,217,230,234,246,247,248,249,252,253,254,258,259,266,268,277,279,282,311,],[32,32,64,64,85,88,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,184,188,184,188,192,64,85,220,222,64,85,85,184,184,85,85,85,85,85,220,85,184,184,188,188,184,85,192,64,64,64,220,220,85,85,85,220,]),'var_ref':([2,5,18,29,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,114,116,136,137,160,164,171,173,198,202,203,205,213,217,230,247,248,252,254,258,259,266,268,277,279,282,311,],[33,33,65,65,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,187,187,65,83,219,65,83,83,83,83,83,83,83,219,83,187,187,83,65,65,65,219,219,83,83,83,219,]),'boolean_expression':([2,5,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,137,160,171,173,198,202,203,205,213,217,230,252,266,268,277,279,282,311,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'constant':([2,5,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,137,160,171,173,198,202,203,205,213,217,230,252,266,268,277,279,282,287,288,311,321,355,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,318,322,36,344,344,]),'function_call':([2,5,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,137,160,171,173,198,202,203,205,213,217,230,252,266,268,277,279,282,311,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'constructor':([2,5,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,137,160,164,171,173,198,202,203,205,213,217,230,252,266,268,277,279,282,311,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,223,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'list_def':([2,5,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,137,160,171,173,198,202,203,205,213,217,230,252,266,268,277,279,282,311,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'list_comprehension':([2,5,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,137,160,171,173,198,202,203,205,213,217,230,252,266,268,277,279,282,311,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'map_def':([2,5,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,137,160,171,173,198,202,203,205,213,217,230,252,266,268,277,279,282,292,311,326,328,329,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,330,41,345,347,349,]),'map_lookup':([2,5,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,137,160,171,173,198,202,203,205,213,217,230,252,266,268,277,279,282,311,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'index_lookup':([2,5,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,137,160,171,173,198,202,203,205,213,217,230,252,266,268,277,279,282,311,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'conditional_expression':([2,5,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,137,160,171,173,198,202,203,205,213,217,230,252,266,268,277,279,282,311,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'attr_ref':([2,5,18,29,30,34,47,57,72,73,74,75,76,90,92,93,94,98,101,102,114,116,136,137,160,164,171,173,198,202,203,205,213,217,230,247,248,252,254,258,259,266,268,277,279,282,311,],[46,46,67,67,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,67,67,67,86,46,67,86,86,86,86,86,86,86,46,86,67,67,86,67,67,67,46,46,86,86,86,46,]),'if_body':([34,277,],[95,312,]),'operand_list':([57,171,198,],[104,232,259,]),'operand':([57,90,92,93,94,98,101,102,137,171,173,198,202,203,213,],[106,151,156,157,158,162,151,166,207,106,233,106,262,263,151,]),'pair_list':([58,283,],[107,316,]),'dict_key':([58,283,],[108,108,]),'pair_list_empty':([58,283,284,],[110,110,317,]),'multi':([68,122,195,352,353,],[120,198,254,356,357,]),'param_list':([70,71,102,201,],[123,130,167,261,]),'param_list_empty':([70,71,102,200,201,],[124,124,124,260,124,]),'param_list_element':([70,71,90,101,102,201,213,],[125,125,150,150,125,125,150,]),'wrapped_kwargs':([70,71,90,101,102,201,213,],[128,128,128,128,128,128,128,]),'function_param_list':([90,101,213,],[146,165,272,]),'function_param_list_empty':([90,101,212,213,],[147,147,271,147,]),'function_param_list_element':([90,101,213,],[148,148,148,]),'list_comprehension_for':([105,315,],[169,341,]),'entity_body_outer':([113,115,246,249,],[174,189,294,297,]),'entity_body':([113,115,175,246,249,],[176,176,234,176,176,]),'attr':([113,115,175,176,234,246,249,],[178,178,178,237,237,178,178,]),'attr_type':([113,115,175,176,234,246,249,],[179,179,179,179,179,179,179,]),'attr_type_opt':([113,115,175,176,234,246,249,],[181,181,181,181,181,181,181,]),'attr_type_multi':([113,115,175,176,234,246,249,],[182,182,182,182,182,182,182,]),'attr_base_type':([113,115,175,176,234,246,249,],[183,183,183,183,183,183,183,]),'class_ref_list':([114,116,247,248,],[185,190,295,296,]),'implement_ns_list':([118,253,],[191,299,]),'id_list':([138,270,],[208,310,]),'stmt_list':([160,217,266,268,311,],[216,278,307,307,339,]),'list_comprehension_guard':([169,281,],[228,314,]),'implementation':([206,],[265,]),'implementation_head':([206,],[266,]),'if_next':([216,],[274,]),'block':([266,268,],[306,309,]),'constant_list':([287,288,],[319,323,]),'list_comprehension_for_empty':([315,],[340,]),'constants':([321,355,],[343,358,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> head body','main',2,'p_main','plyInmantaParser.py',127),
  ('head -> <empty>','head',0,'p_main_head','plyInmantaParser.py',135),
  ('head -> MLS','head',1,'p_main_head_doc','plyInmantaParser.py',140),
  ('body -> top_stmt body','body',2,'p_body_collect','plyInmantaParser.py',145),
  ('body -> empty','body',1,'p_body_term','plyInmantaParser.py',152),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',157),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',158),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',159),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',160),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',161),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',162),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',163),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',164),
  ('empty -> <empty>','empty',0,'p_empty','plyInmantaParser.py',169),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',179),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',185),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',196),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',197),
  ('statement -> if','statement',1,'p_stmt','plyInmantaParser.py',198),
  ('statement -> expression','statement',1,'p_stmt','plyInmantaParser.py',199),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',213),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list_empty','plyInmantaParser.py',220),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',225),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',231),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',237),
  ('if -> IF if_body END','if',3,'p_if_start','plyInmantaParser.py',244),
  ('if_body -> expression : stmt_list if_next','if_body',4,'p_if_body','plyInmantaParser.py',250),
  ('if_next -> empty','if_next',1,'p_if_end','plyInmantaParser.py',257),
  ('if_next -> ELSE : stmt_list','if_next',3,'p_if_else','plyInmantaParser.py',263),
  ('if_next -> ELIF if_body','if_next',2,'p_if_elif','plyInmantaParser.py',269),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',281),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',288),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',293),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',300),
  ('entity_body_outer -> MLS entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',305),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',310),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',315),
  ('entity_body_outer -> MLS END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',320),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',325),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',331),
  ('attr_base_type -> ns_ref','attr_base_type',1,'p_attribute_base_type','plyInmantaParser.py',336),
  ('attr_type_multi -> attr_base_type [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',342),
  ('attr_type_opt -> attr_type_multi ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',348),
  ('attr_type_opt -> attr_base_type ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',349),
  ('attr_type -> attr_type_opt','attr_type',1,'p_attribute_type','plyInmantaParser.py',355),
  ('attr_type -> attr_type_multi','attr_type',1,'p_attribute_type','plyInmantaParser.py',356),
  ('attr_type -> attr_base_type','attr_type',1,'p_attribute_type','plyInmantaParser.py',357),
  ('attr -> attr_type CID empty','attr',3,'p_attr_err','plyInmantaParser.py',362),
  ('attr -> attr_type CID = constant','attr',4,'p_attr_err','plyInmantaParser.py',363),
  ('attr -> attr_type CID = constant_list','attr',4,'p_attr_err','plyInmantaParser.py',364),
  ('attr -> attr_type CID = UNDEF','attr',4,'p_attr_err','plyInmantaParser.py',365),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',372),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',378),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',379),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',385),
  ('attr -> DICT empty CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',391),
  ('attr -> DICT empty CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',392),
  ('attr -> DICT empty CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',393),
  ('attr -> DICT ? CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',394),
  ('attr -> DICT ? CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',395),
  ('attr -> DICT ? CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',396),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',403),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',409),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',415),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',420),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',426),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',432),
  ('implement_ns_list -> ns_ref','implement_ns_list',1,'p_implement_ns_list_ref','plyInmantaParser.py',439),
  ('implement_ns_list -> PARENTS','implement_ns_list',1,'p_implement_ns_list_parents','plyInmantaParser.py',444),
  ('implement_ns_list -> implement_ns_list , implement_ns_list','implement_ns_list',3,'p_implement_ns_list_collect','plyInmantaParser.py',449),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list empty','implement_def',5,'p_implement','plyInmantaParser.py',454),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list MLS','implement_def',5,'p_implement','plyInmantaParser.py',455),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression empty','implement_def',7,'p_implement_when','plyInmantaParser.py',464),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression MLS','implement_def',7,'p_implement_when','plyInmantaParser.py',465),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',475),
  ('implementation -> implementation_head block','implementation',2,'p_implementation','plyInmantaParser.py',488),
  ('implementation_head -> :','implementation_head',1,'p_implementation_head','plyInmantaParser.py',493),
  ('implementation_head -> : MLS','implementation_head',2,'p_implementation_head_doc','plyInmantaParser.py',498),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',503),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation_deprecated','plyInmantaParser.py',509),
  ('relation -> class_ref ID multi REL multi class_ref ID MLS','relation',8,'p_relation_deprecated_comment','plyInmantaParser.py',520),
  ('relation -> relation_def MLS','relation',2,'p_relation_outer_comment','plyInmantaParser.py',559),
  ('relation -> relation_def','relation',1,'p_relation_outer','plyInmantaParser.py',566),
  ('relation_def -> class_ref . ID multi REL class_ref . ID multi','relation_def',9,'p_relation','plyInmantaParser.py',571),
  ('relation_def -> class_ref . ID multi REL class_ref','relation_def',6,'p_relation_unidir','plyInmantaParser.py',577),
  ('relation_def -> class_ref . ID multi operand_list class_ref . ID multi','relation_def',9,'p_relation_annotated','plyInmantaParser.py',583),
  ('relation_def -> class_ref . ID multi operand_list class_ref','relation_def',6,'p_relation_annotated_unidir','plyInmantaParser.py',589),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',595),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',600),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',605),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',610),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',618),
  ('typedef -> typedef_inner MLS','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',623),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING expression','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',630),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',637),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',645),
  ('expression -> boolean_expression','expression',1,'p_expression','plyInmantaParser.py',655),
  ('expression -> constant','expression',1,'p_expression','plyInmantaParser.py',656),
  ('expression -> function_call','expression',1,'p_expression','plyInmantaParser.py',657),
  ('expression -> var_ref','expression',1,'p_expression','plyInmantaParser.py',658),
  ('expression -> constructor','expression',1,'p_expression','plyInmantaParser.py',659),
  ('expression -> list_def','expression',1,'p_expression','plyInmantaParser.py',660),
  ('expression -> list_comprehension','expression',1,'p_expression','plyInmantaParser.py',661),
  ('expression -> map_def','expression',1,'p_expression','plyInmantaParser.py',662),
  ('expression -> map_lookup','expression',1,'p_expression','plyInmantaParser.py',663),
  ('expression -> index_lookup','expression',1,'p_expression','plyInmantaParser.py',664),
  ('expression -> conditional_expression','expression',1,'p_expression','plyInmantaParser.py',665),
  ('expression -> ( expression )','expression',3,'p_expression_parentheses','plyInmantaParser.py',670),
  ('boolean_expression -> expression CMP_OP expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',675),
  ('boolean_expression -> expression IN expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',676),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',677),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',678),
  ('boolean_expression -> NOT expression','boolean_expression',2,'p_boolean_expression_not','plyInmantaParser.py',687),
  ('boolean_expression -> var_ref . ID IS DEFINED','boolean_expression',5,'p_boolean_expression_is_defined','plyInmantaParser.py',693),
  ('boolean_expression -> ID IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_short','plyInmantaParser.py',699),
  ('boolean_expression -> map_lookup IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_map_lookup','plyInmantaParser.py',705),
  ('operand -> expression','operand',1,'p_operand','plyInmantaParser.py',725),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',730),
  ('map_lookup -> var_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',731),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',732),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',737),
  ('function_call -> ns_ref ( function_param_list )','function_call',4,'p_function_call','plyInmantaParser.py',743),
  ('function_call -> attr_ref ( function_param_list )','function_call',4,'p_function_call_err_dot','plyInmantaParser.py',750),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',755),
  ('list_comprehension -> [ expression list_comprehension_for list_comprehension_guard ]','list_comprehension',5,'p_list_comprehension','plyInmantaParser.py',768),
  ('list_comprehension_for_empty -> empty','list_comprehension_for_empty',1,'p_list_comprehension_for_empty','plyInmantaParser.py',793),
  ('list_comprehension_for -> FOR ID IN expression list_comprehension_for_empty','list_comprehension_for',5,'p_list_comprehension_for','plyInmantaParser.py',798),
  ('list_comprehension_for -> FOR ID IN expression list_comprehension_for','list_comprehension_for',5,'p_list_comprehension_for','plyInmantaParser.py',799),
  ('list_comprehension_guard -> empty','list_comprehension_guard',1,'p_list_comprehension_guard_empty','plyInmantaParser.py',806),
  ('list_comprehension_guard -> IF expression list_comprehension_guard','list_comprehension_guard',3,'p_list_comprehension_guard','plyInmantaParser.py',811),
  ('dict_key -> RSTRING','dict_key',1,'p_r_string_dict_key','plyInmantaParser.py',821),
  ('dict_key -> STRING','dict_key',1,'p_string_dict_key','plyInmantaParser.py',826),
  ('pair_list -> dict_key : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',840),
  ('pair_list -> dict_key : operand empty pair_list_empty','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',841),
  ('pair_list -> pair_list_empty','pair_list',1,'p_pair_list_empty','plyInmantaParser.py',850),
  ('pair_list_empty -> empty','pair_list_empty',1,'p_pair_list_empty','plyInmantaParser.py',851),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',856),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',862),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',868),
  ('conditional_expression -> expression ? expression : expression','conditional_expression',5,'p_conditional_expression','plyInmantaParser.py',875),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',885),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',886),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',893),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',899),
  ('constant -> TRUE','constant',1,'p_constant_true','plyInmantaParser.py',905),
  ('constant -> FALSE','constant',1,'p_constant_false','plyInmantaParser.py',911),
  ('constant -> STRING','constant',1,'p_constant_string','plyInmantaParser.py',917),
  ('constant -> FSTRING','constant',1,'p_constant_fstring','plyInmantaParser.py',923),
  ('constant -> RSTRING','constant',1,'p_constant_rstring','plyInmantaParser.py',980),
  ('constant -> MLS','constant',1,'p_constant_mls','plyInmantaParser.py',986),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',1075),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',1081),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',1086),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',1091),
  ('wrapped_kwargs -> * * operand','wrapped_kwargs',3,'p_wrapped_kwargs','plyInmantaParser.py',1097),
  ('param_list_element -> ID = operand','param_list_element',3,'p_param_list_element_explicit','plyInmantaParser.py',1103),
  ('param_list_element -> wrapped_kwargs','param_list_element',1,'p_param_list_element_kwargs','plyInmantaParser.py',1109),
  ('param_list -> param_list_empty','param_list',1,'p_param_list_empty','plyInmantaParser.py',1115),
  ('param_list_empty -> empty','param_list_empty',1,'p_param_list_empty','plyInmantaParser.py',1116),
  ('param_list -> param_list_element empty param_list_empty','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',1122),
  ('param_list -> param_list_element , param_list','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',1123),
  ('function_param_list_element -> param_list_element','function_param_list_element',1,'p_function_param_list_element','plyInmantaParser.py',1138),
  ('function_param_list_element -> operand','function_param_list_element',1,'p_function_param_list_element_arg','plyInmantaParser.py',1145),
  ('function_param_list -> function_param_list_empty','function_param_list',1,'p_function_param_list_empty','plyInmantaParser.py',1151),
  ('function_param_list_empty -> empty','function_param_list_empty',1,'p_function_param_list_empty','plyInmantaParser.py',1152),
  ('function_param_list -> function_param_list_element empty function_param_list_empty','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',1158),
  ('function_param_list -> function_param_list_element , function_param_list','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',1159),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',1177),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',1183),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',1188),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',1193),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',1198),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',1204),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',1210),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',1221),
  ('class_ref -> var_ref . CID','class_ref',3,'p_class_ref_err_dot','plyInmantaParser.py',1227),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',1242),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',1248),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',1253),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',1258),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',1264),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',1270),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',1275),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',1281),
]
