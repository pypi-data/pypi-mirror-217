{"version":3,"sources":["utils/Box.jsx","utils/functions.jsx","assets/expand.svg","assets/shrink.svg","MyComponent.jsx","index.jsx"],"names":["Box","_ref","children","geometry","style","_jsx","_objectSpread","position","left","concat","x","top","y","height","width","renderContent","_ref2","annotation","border","className","data","text","id","ViewDataInTable","_ref4","labels","annotations","_useState3","useState","_useState4","_slicedToArray","setData","useEffect","tempData","forEach","label","frquency","console","log","_Fragment","_jsxs","Object","keys","map","key","index","Preview","props","increaseLabelFontSize","decreaseLabelFontSize","labelFontSize","renderImageToCanvas","togglePreview","canvasRef","labnelLineWidth","preview","increaseLabelLineWidth","decreaseLabelLineWidth","_useState5","_useState6","dataUrl","setdataUrl","rerender","_ref5","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_canvasRef$current","wrap","_context","prev","next","current","toDataURL","stop","apply","arguments","onClick","backgroundColor","src","alt","MyComponent","_Component","_inherits","_super","_createSuper","_this$props","_this","_classCallCheck","call","React","createRef","setState","state","enablePreview","toggleLabels","showLabels","enableEditing","isEditable","toggleFullWidth","isFullWidth","moveDiv","e","coords","clientX","clientY","onMouseMove","showDiv","window","addEventListener","onMouseOut","removeEventListener","length","undefined","Promise","resolve","canvas","context","getContext","img","Image","onload","drawImage","px","py","pwidth","pheight","beginPath","rect","lineWidth","strokeStyle","stroke","fillStyle","font","fillText","fillRect","measureText","image","onChange","onSubmit","Math","random","onChangeType","type","currentTarget","innerHTML","deleteAnnotation","filter","downloadImage","_this$canvasRef$curre","link","document","createElement","href","download","click","_callee2","_context2","_toConsumableArray","detectedAnotations","_createClass","value","this","_this2","imageSrc","expand","shrink","maxWidth","Annotation","disableEditor","disableAnnotation","disableSelector","disableOverlay","renderEditor","background","target","renderHighlight","_ref3","active","ref","display","Component","App","_StreamlitComponentBa","_super2","_this$props$args","args","StreamlitComponentBase","withStreamlitConnection","ReactDOM","render","StrictMode","getElementById"],"mappings":"8SAceA,EAdH,SAAHC,GAAA,IAAMC,EAAQD,EAARC,SAAUC,EAAQF,EAARE,SAAUC,EAAKH,EAALG,MAAK,OACtCC,cAAA,OACED,MAAKE,wBAAA,GACAF,GAAK,IACRG,SAAU,WACVC,KAAK,GAADC,OAAKN,EAASO,EAAC,KACnBC,IAAI,GAADF,OAAKN,EAASS,EAAC,KAClBC,OAAO,GAADJ,OAAKN,EAASU,OAAM,KAC1BC,MAAM,GAADL,OAAKN,EAASW,MAAK,OACxBZ,SAEDA,GACG,EC8BKa,EAAgB,SAAHC,GAAwB,IAAlBC,EAAUD,EAAVC,WACtBd,EAAac,EAAbd,SACR,OACEE,cAACL,EAAG,CAEFG,SAAUA,EACVC,MAAO,CACLc,OAAO,mBAEPhB,SAEFG,cAAA,KAAGc,UAAU,qBAAoBjB,SAC9Be,EAAWG,MAAQH,EAAWG,KAAKC,QARjCJ,EAAWG,KAAKE,GAY3B,EAwFO,IAAMC,EAAkB,SAAHC,GAAiC,IAA3BC,EAAMD,EAANC,OAAQC,EAAWF,EAAXE,YACxCC,EAAwBC,mBAAS,CAAC,GAAEC,EAAAC,YAAAH,EAAA,GAA7BP,EAAIS,EAAA,GAAEE,EAAOF,EAAA,GAgBpB,OAdAG,qBAAU,WACR,IAAMC,EAAW,CAAC,EAClBR,EAAOS,SAAQ,SAACC,GACdF,EAASE,GAAS,CACpB,IACAT,EAAYQ,SAAQ,SAACjB,GACnB,IACQI,EADSJ,EAATG,KACAC,KACFe,EAAWH,EAASZ,GAAQY,EAASZ,GAAQ,EAAI,EACvDY,EAASZ,GAAQe,CACnB,IACAL,EAAQE,GACRI,QAAQC,IAAI,CAAEL,YAChB,GAAG,CAACP,IAEFrB,cAAAkC,WAAA,CAAArC,SACEsC,eAAA,OAAKrB,UAAU,aAAYjB,SAAA,CACzBsC,eAAA,OAAKrB,UAAU,WAAUjB,SAAA,CACvBG,cAAA,OAAKc,UAAU,cAAajB,SAAC,QAC7BG,cAAA,OAAKc,UAAU,gBAAejB,SAAC,WAC/BG,cAAA,OAAKc,UAAU,gBAAejB,SAAC,WAGhCuC,OAAOC,KAAKtB,GAAMuB,KAAI,SAACC,EAAKC,GAC3B,OACEL,eAAA,OAAKrB,UAAU,WAAUjB,SAAA,CACvBG,cAAA,OAAKc,UAAU,cAAajB,SAAE2C,EAAQ,IACtCxC,cAAA,OAAKc,UAAU,gBAAejB,SAAE0C,IAChCvC,cAAA,OAAKc,UAAU,gBAAejB,SAAEkB,EAAKwB,OAHRA,EAMnC,QAIR,EAEaE,EAAU,SAACC,GACtB,IACEC,EAUED,EAVFC,sBACAC,EASEF,EATFE,sBACAC,EAQEH,EARFG,cACAC,EAOEJ,EAPFI,oBACAC,EAMEL,EANFK,cACAC,EAKEN,EALFM,UAEAC,GAGEP,EAJFQ,QAIER,EAHFO,iBACAE,EAEET,EAFFS,uBACAC,EACEV,EADFU,uBAGFC,EAA8B9B,mBAAS,MAAK+B,EAAA7B,YAAA4B,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,EAAQ,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAR,EAAA,OAAAK,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACTrB,EAAoBD,EAAeI,GAAgB,OACnDM,EAA2B,QAApBQ,EAAGf,EAAUoB,eAAO,IAAAL,OAAA,EAAjBA,EAAmBM,YACnCb,EAAWD,GAAQ,wBAAAU,EAAAK,OAAA,GAAAR,EAAA,KACpB,kBAJa,OAAAJ,EAAAa,MAAA,KAAAC,UAAA,KAcd,OARA7C,qBAAU,WACR8B,GACF,GAAG,CAACZ,EAAeI,IAOjBd,eAAA,OAAKrB,UAAU,gBAAejB,SAAA,CAC5BsC,eAAA,OAAKrB,UAAU,OAAMjB,SAAA,CACnBG,cAAA,UAAQc,UAAU,GAAG2D,QAAS1B,EAAclD,SAAC,UAG7CG,cAAA,UAAQD,MAAO,CAAE2E,gBAAiB,QAAS7E,SAAC,cAC5CG,cAAA,UAAQc,UAAU,GAAG2D,QAAS9B,EAAsB9C,SAAC,MAGrDG,cAAA,UAAQc,UAAU,GAAG2D,QAAS7B,EAAsB/C,SAAC,MAGrDG,cAAA,UAAQD,MAAO,CAAE2E,gBAAiB,QAAS7E,SAAC,eAE5CG,cAAA,UAAQc,UAAU,GAAG2D,QAAStB,EAAuBtD,SAAC,MAGtDG,cAAA,UAAQc,UAAU,GAAG2D,QAASrB,EAAuBvD,SAAC,UAItD0D,GAAWvD,cAAA,KAAAH,SAAG,4BACf0D,GAAWvD,cAAA,OAAK2E,IAAKpB,EAASqB,IAAI,cAGzC,ECjPe,MAA0B,mCCA1B,MAA0B,mCCqBnCC,EAAW,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GACf,SAAAA,EAAYnC,GAAQ,IAADwC,EAAAC,EAahB,OAbgBC,YAAA,KAAAP,IACjBM,EAAAH,EAAAK,KAAA,KAAM3C,IAeRM,UAAYsC,IAAMC,YAAWJ,EAC7BxC,sBAAwB,WACtBwC,EAAKK,SAAS,CAAE3C,cAAesC,EAAKM,MAAM5C,cAAgB,GAC5D,EAACsC,EACDvC,sBAAwB,WACtBuC,EAAKK,SAAS,CAAE3C,cAAesC,EAAKM,MAAM5C,cAAgB,GAC5D,EAACsC,EACDhC,uBAAyB,WACvBgC,EAAKK,SAAS,CAAEvC,gBAAiBkC,EAAKM,MAAMxC,gBAAkB,GAChE,EAACkC,EACD/B,uBAAyB,WACvB+B,EAAKK,SAAS,CAAEvC,gBAAiBkC,EAAKM,MAAMxC,gBAAkB,GAChE,EAACkC,EAEDpC,cAAgB,WACdoC,EAAKK,SAAS,CAAEE,eAAgBP,EAAKM,MAAMC,eAC7C,EAACP,EACDQ,aAAe,WACbR,EAAKK,SAAS,CAAEI,YAAaT,EAAKM,MAAMG,YAC1C,EAACT,EACDU,cAAgB,WACdV,EAAKK,SAAS,CAAEM,YAAaX,EAAKM,MAAMK,YAC1C,EAACX,EACDY,gBAAkB,WAChBZ,EAAKK,SAAS,CAAEQ,aAAcb,EAAKM,MAAMO,aAC3C,EAACb,EACDc,QAAU,SAACC,GACTf,EAAKK,SAAS,CAAEW,OAAQ,CAAE9F,EAAG6F,EAAEE,QAAS7F,EAAG2F,EAAEG,UAC/C,EAAClB,EAEDmB,YAAc,SAACJ,GACbf,EAAKK,SAAS,CAAEe,SAAS,IACzBC,OAAOC,iBAAiB,YAAatB,EAAKc,QAC5C,EAACd,EAEDuB,WAAa,SAACR,GACZf,EAAKK,SAAS,CAAEe,SAAS,IACzBC,OAAOG,oBAAoB,YAAaxB,EAAKc,QAC/C,EAACd,EAMDrC,oBAAsB,WAGhB,IAFJD,EAAa2B,UAAAoC,OAAA,QAAAC,IAAArC,UAAA,GAAAA,UAAA,GAAGW,EAAKM,MAAM5C,cAC3BI,EAAeuB,UAAAoC,OAAA,QAAAC,IAAArC,UAAA,GAAAA,UAAA,GAAGW,EAAKM,MAAMxC,gBAE7B,OAAO,IAAI6D,SAAQ,SAACC,GAClB,IAAMC,EAAS7B,EAAKnC,UAAUoB,QACxB6C,EAAUD,EAAOE,WAAW,MAC5BC,EAAM,IAAIC,MAEhBD,EAAIE,OAAS,WACXL,EAAOvG,MAAQ0G,EAAI1G,MACnBuG,EAAOxG,OAAS2G,EAAI3G,OACpByG,EAAQK,UAAUH,EAAK,EAAG,EAAGA,EAAI1G,MAAO0G,EAAI3G,QAE5C2E,EAAKM,MAAMpE,YAAYQ,SAAQ,SAACjB,GAC9B,IAAQd,EAAmBc,EAAnBd,SAAUiB,EAASH,EAATG,KACVV,EAAwBP,EAAxBO,EAAGE,EAAqBT,EAArBS,EAAGE,EAAkBX,EAAlBW,MAAOD,EAAWV,EAAXU,OACbQ,EAASD,EAATC,KAEDuG,EACJlH,EAAI,IAAO8G,EAAI1G,MADP+G,EAERjH,EAAI,IAAO4G,EAAI3G,OAFHiH,EAGZhH,EAAQ,IAAO0G,EAAI1G,MAHCiH,EAIpBlH,EAAS,IAAO2G,EAAI3G,OAGvByG,EAAQU,YACRV,EAAQW,KAAKL,EAAIC,EAAIC,EAAQC,GAC7BT,EAAQY,UAAY5E,EACpBgE,EAAQa,YAAc,MAEtBb,EAAQc,SACRd,EAAQe,UAAY,QACpBf,EAAQgB,KAAI,QAAA7H,OAAWyC,EAAa,aACpCoE,EAAQiB,SACNlH,EACAuG,EACAC,EAAK3E,EAAgB2E,EAAKvE,EAAkBuE,EAAK3E,GAGnDoE,EAAQe,UAAY,QACpBf,EAAQkB,SACNZ,GACCC,EAAK3E,EAAgB2E,EAAKvE,EAAkBuE,EAAK3E,GAChDA,EACA,GACFoE,EAAQmB,YAAYpH,GAAMP,MAAQ,GAClCoC,EAAgB,IAGlBoE,EAAQe,UAAY,QACpBf,EAAQgB,KAAI,QAAA7H,OAAWyC,EAAa,aACpCoE,EAAQiB,SACNlH,EACAuG,EAAK,GACLC,EAAK3E,EACD2E,EAAKvE,EAAkB,GACvBuE,EAAK3E,EAAgB,GAE7B,IAGAkE,GACF,EAEAI,EAAIxC,IAAM,0BAA4BQ,EAAKzC,MAAM2F,KACnD,GACF,EAAClD,EAEDmD,SAAW,SAAC1H,GACVuE,EAAKK,SAAS,CAAE5E,cAClB,EAACuE,EAEDoD,SAAW,SAAC3H,GACV,IAAQd,EAAmBc,EAAnBd,SAAUiB,EAASH,EAATG,KAElBoE,EAAKK,SAAS,CACZ5E,WAAY,CAAC,EACbS,YAAa8D,EAAKM,MAAMpE,YAAYjB,OAAO,CACzCN,WACAiB,KAAId,wBAAA,GACCc,GAAI,IACPE,GAAIuH,KAAKC,cAIjB,EAACtD,EACDuD,aAAe,SAACxC,GACdf,EAAKK,SAAS,CACZ5E,WAAY,CAAC,EACb+H,KAAMzC,EAAE0C,cAAcC,WAE1B,EAAC1D,EACD2D,iBAAmB,SAAC7H,GAClBkE,EAAKK,SAAS,CACZnE,YAAa8D,EAAKM,MAAMpE,YAAY0H,QAAO,SAACnI,GAC1C,OAAOA,EAAWG,KAAKE,KAAOA,CAChC,KAEJ,EAACkE,EAED6D,cAAarF,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAmF,EAAA1F,EAAA2F,EAAA,OAAAtF,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAERgB,EAAKrC,sBAAqB,OAG1BS,EAAgC,QAAzB0F,EAAG9D,EAAKnC,UAAUoB,eAAO,IAAA6E,OAAA,EAAtBA,EAAwB5E,aAGlC6E,EAAOC,SAASC,cAAc,MAC/BC,KAAO9F,EAGZ2F,EAAKI,SAAW,YAGhBJ,EAAKK,QAAO,wBAAAtF,EAAAK,OAAA,GAAAR,EAAA,KACbqB,EACDjC,QAAOS,YAAAC,cAAAC,MAAG,SAAA2F,IAAA,OAAA5F,cAAAI,MAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,cAAAsF,EAAAtF,KAAA,EACFgB,EAAKrC,sBAAqB,OAChCqC,EAAKK,SAAS,CAAEE,eAAe,IAAO,wBAAA+D,EAAAnF,OAAA,GAAAkF,EAAA,KAlLtCrE,EAAKM,MAAQ,CACXpE,YAAWqI,YAAgB,QAAhBxE,EAAMC,EAAKzC,aAAK,IAAAwC,OAAA,EAAVA,EAAYyE,oBAC7B/I,WAAY,CAAC,EACb2F,SAAS,EACTJ,OAAQ,CAAE9F,EAAG,EAAGE,EAAG,GACnBuF,YAAY,EACZF,YAAY,EACZI,aAAa,EACbN,eAAe,EACf7C,cAAe,GACfI,gBAAiB,GAClBkC,CACH,CAuRC,OAvRAyE,YAAA/E,EAAA,EAAAtC,IAAA,uBAAAsH,MA0CD,WACErD,OAAOG,oBAAoB,YAAamD,KAAK7D,QAC/C,GAAC,CAAA1D,IAAA,SAAAsH,MA6HD,WAAU,IAADE,EAAA,KACDC,EAAW,0BAA4BF,KAAKpH,MAAM2F,MAExD,OACElG,eAAAD,WAAA,CAAArC,SAAA,CACEG,cAAA,OAAKc,UAAU,OAAMjB,SAClBiK,KAAKrE,MAAMK,WACV3D,eAAAD,WAAA,CAAArC,SAAA,CACEsC,eAAA,UAAQsC,QAASqF,KAAKnE,aAAa9F,SAAA,CAChCiK,KAAKrE,MAAMG,WAAa,OAAS,OAAO,aAG3C5F,cAAA,UAAQyE,QAASqF,KAAKd,cAAcnJ,SAAC,aACrCsC,eAAA,UAAQsC,QAASqF,KAAK/G,cAAclD,SAAA,CACjCiK,KAAKrE,MAAMC,cAAgB,OAAS,OAAO,cAE9C1F,cAAA,UAAQyE,QAASqF,KAAK/D,gBAAgBlG,SACnCiK,KAAKrE,MAAMO,YACVhG,cAAA,OAAK2E,IAAKsF,EAAQrF,IAAI,WAEtB5E,cAAA,OAAK2E,IAAKuF,EAAQtF,IAAI,eAK5B5E,cAAAkC,WAAA,CAAArC,SACEG,cAAA,UAAQyE,QAASqF,KAAKjE,cAAchG,SAAC,oBAI3CsC,eAAA,OAAKrB,UAAU,SAAQjB,SAAA,CACrBG,cAAA,OACEc,UAAU,wBACVwF,YAAawD,KAAKxD,YAClBI,WAAYoD,KAAKpD,WACjB3G,MAAO,CACLoK,SAAUL,KAAKrE,MAAMO,YAAc,QAAU,SAC7CnG,SAEFG,cAACoK,IAAU,CACTzF,IAAKqF,EACLpF,IAAI,MACJvD,YAAayI,KAAKrE,MAAMpE,YACxBsH,KAAMmB,KAAKrE,MAAMkD,KACjBkB,MAAOC,KAAKrE,MAAM7E,WAClB0H,SAAUwB,KAAKxB,SACfC,SAAUuB,KAAKvB,SACf8B,eAAgBP,KAAKrE,MAAMK,WAC3BwE,mBAAoBR,KAAKrE,MAAMK,WAC/ByE,iBAAkBT,KAAKrE,MAAMK,WAC7B0E,gBAAiBV,KAAKrE,MAAMK,WAC5B2E,aAAc,SAAC/H,GAGb,OHxMY,SAACA,EAAOtB,GAClC,IAAQtB,EAAa4C,EAAM9B,WAAnBd,SACR,OAAKA,EAEHqC,eAAA,OACErB,UAAU,SACVf,MAAO,CACL2K,WAAY,sBACZvK,KAAK,GAADC,OAAKN,EAASO,EAAI,GAAK,GAAKP,EAASO,EAAC,KAC1CC,IAAI,GAADF,OAAKN,EAASS,EAAI,GAAK,GAAKT,EAASS,EAAC,MACzCV,SAAA,CAEFsC,eAAA,UACErB,UAAU,aACVwH,SAAU,SAACpC,GACTxD,EAAM4F,SAAQrI,wBAAC,CAAC,EACXyC,EAAM9B,YAAU,IACnBG,KAAId,wBAAA,GACCyC,EAAM9B,WAAWG,MAAI,IACxBC,KAAMkF,EAAEyE,OAAOd,UAGrB,EAAEhK,SAAA,CAEFG,cAAA,UAAQ6J,MAAM,GAAEhK,SAAC,cAChBuB,EAAOkB,KAAI,SAACR,GAAK,OAChB9B,cAAA,UAAoB6J,MAAO/H,EAAMjC,SAC9BiC,GADUA,EAEJ,OAGb9B,cAAA,UAAQc,UAAU,iBAAiB2D,QAAS/B,EAAM6F,SAAS1I,SAAC,WA7B1C,IAkCxB,CGoKuB4K,CAAa/H,EADLqH,EAAKrH,MAAMtB,OAE5B,EACAV,cAAeA,EACfkK,gBAAiB,SAAAC,GACf,OHnQe,SAAHjL,GAKrB,IAJLgB,EAAUhB,EAAVgB,WACAkK,EAAMlL,EAANkL,OACAhC,EAAgBlJ,EAAhBkJ,iBACAlD,EAAUhG,EAAVgG,WAEQ9F,EAAac,EAAbd,SACAiB,EAASH,EAATG,KACR,OAAKjB,EAEHE,cAAAkC,WAAA,CAAArC,SACEsC,eAACxC,EAAG,CAEFG,SAAUA,EACVC,MAAO,CACLc,OAAO,aAADT,OAAe0K,EAAS,UAAY,QAE1CjL,SAAA,CAEDiL,GACC9K,cAAA,UACEc,UAAU,yBACV2D,QAAS,WACPzC,QAAQC,IAAI,UACZ6G,EAAiBlI,EAAWG,KAAKE,GACnC,EAAEpB,SACH,MAIF+F,GACC5F,cAAA,KAAGc,UAAU,qBAAoBjB,SAAEkB,GAAQA,EAAKC,SAnB7CJ,EAAWG,KAAKE,MAJL,IA4BxB,CG+NuB2J,CAAgB,CACrBhK,WAF0BiK,EAAVjK,WAGhBkK,OAHkCD,EAANC,OAI5BlF,WAAYmE,EAAKtE,MAAMG,WACvBkD,iBAAkBiB,EAAKjB,kBAE3B,MAGJ9I,cAAA,OAAKc,UAAU,aAAYjB,SACzBG,cAACkB,EAAe,CACdE,OAAQ0I,KAAKpH,MAAMtB,OACnBC,YAAayI,KAAKrE,MAAMpE,mBAK9BrB,cAAA,UAAQ+K,IAAKjB,KAAK9G,UAAWjD,MAAO,CAAEiL,QAAS,UAE9ClB,KAAKrE,MAAMC,eACV1F,cAACyC,EAAO,CACNE,sBAAuBmH,KAAKnH,sBAC5BC,sBAAuBkH,KAAKlH,sBAC5BC,cAAeiH,KAAKrE,MAAM5C,cAC1BC,oBAAqBgH,KAAKhH,oBAC1BC,cAAe+G,KAAK/G,cACpBC,UAAW8G,KAAK9G,UAChBC,gBAAiB6G,KAAKrE,MAAMxC,gBAC5BE,uBAAwB2G,KAAK3G,uBAC7BC,uBAAwB0G,KAAK1G,2BAuBvC,KAACyB,CAAA,CAtSc,CAASoG,aAySpBC,EAAG,SAAAC,GAAApG,YAAAmG,EAAAC,GAAA,IAAAC,EAAAnG,YAAAiG,GAAA,SAAAA,IAAA,OAAA9F,YAAA,KAAA8F,GAAAE,EAAA7G,MAAA,KAAAC,UAAA,CAWN,OAXMoF,YAAAsB,EAAA,EAAA3I,IAAA,SAAAsH,MACP,WACE,IAAAwB,EAA8CvB,KAAKpH,MAAM4I,KAAjDjD,EAAKgD,EAALhD,MAAOjH,EAAMiK,EAANjK,OAAQuI,EAAkB0B,EAAlB1B,mBAEvB,OACE3J,cAAC6E,EAAW,CACVwD,MAAOA,EACPjH,OAAQA,EACRuI,mBAAoBA,GAG1B,KAACuB,CAAA,CAXM,CAASK,KAcHC,cAAwBN,GCxUvCO,IAASC,OACP1L,cAACsF,IAAMqG,WAAU,CAAA9L,SACfG,cAAC6E,EAAW,MAEdsE,SAASyC,eAAe,Q","file":"static/js/main.c0d60b13.chunk.js","sourcesContent":["const Box = ({ children, geometry, style }) => (\n  <div\n    style={{\n      ...style,\n      position: \"absolute\",\n      left: `${geometry.x}%`,\n      top: `${geometry.y}%`,\n      height: `${geometry.height}%`,\n      width: `${geometry.width}%`,\n    }}\n  >\n    {children}\n  </div>\n)\nexport default Box\n","import React, { useState, useEffect } from \"react\"\nimport Box from \"./Box\"\nimport \"../label-image.css\"\n\nexport const renderHighlight = ({\n  annotation,\n  active,\n  deleteAnnotation,\n  showLabels,\n}) => {\n  const { geometry } = annotation\n  const { data } = annotation\n  if (!geometry) return null\n  return (\n    <>\n      <Box\n        key={annotation.data.id}\n        geometry={geometry}\n        style={{\n          border: `solid 3px ${active ? \"#3e8e41\" : \"red\"}`,\n          // boxShadow: active && \"0 0 20px 20px rgba(255, 255, 255, 0.3) inset\",\n        }}\n      >\n        {active && (\n          <button\n            className=\"deleteAnnotationButton\"\n            onClick={() => {\n              console.log(\"delete\")\n              deleteAnnotation(annotation.data.id)\n            }}\n          >\n            X\n          </button>\n        )}\n        {showLabels && (\n          <p className=\"label-text-for-all\">{data && data.text}</p>\n        )}\n      </Box>\n    </>\n  )\n}\n\nexport const renderContent = ({ annotation }) => {\n  const { geometry } = annotation\n  return (\n    <Box\n      key={annotation.data.id}\n      geometry={geometry}\n      style={{\n        border: `solid 3px white`,\n        // boxShadow: active && \"0 0 20px 20px rgba(255, 255, 255, 0.3) inset\",\n      }}\n    >\n      <p className=\"label-text-for-all\">\n        {annotation.data && annotation.data.text}\n      </p>\n    </Box>\n  )\n}\nexport const renderEditor = (props, labels) => {\n  const { geometry } = props.annotation\n  if (!geometry) return null\n  return (\n    <div\n      className=\"holder\"\n      style={{\n        background: \"rgba(0, 0, 0, 0.15)\",\n        left: `${geometry.x > 80 ? 75 : geometry.x}%`,\n        top: `${geometry.y > 85 ? 85 : geometry.y}%`,\n      }}\n    >\n      <select\n        className=\"selectItem\"\n        onChange={(e) => {\n          props.onChange({\n            ...props.annotation,\n            data: {\n              ...props.annotation.data,\n              text: e.target.value,\n            },\n          })\n        }}\n      >\n        <option value=\"\">Select...</option>\n        {labels.map((label) => (\n          <option key={label} value={label}>\n            {label}\n          </option>\n        ))}\n      </select>\n      <button className=\"addLabelButton\" onClick={props.onSubmit}>\n        Add\n      </button>\n    </div>\n  )\n}\n\nexport const DataDiv = ({ annotations, labels }) => {\n  // we will create a table here\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    const tempData = {}\n    labels.forEach((label) => {\n      tempData[label] = 0\n    })\n    annotations.forEach((annotation) => {\n      const { data } = annotation\n      const { text } = data\n      const frquency = tempData[text] ? tempData[text] + 1 : 1\n      tempData[text] = frquency\n    })\n    setData(tempData)\n    console.log({ tempData })\n  }, [annotations])\n  return (\n    <>\n      <div className=\"dataHolder\">\n        {Object.keys(data).map((key) => {\n          return (\n            <div className=\"dataItem\" key={key}>\n              <div className=\"dataItemLabel\">{key}</div>\n              <div className=\"dataItemValue\">{data[key]}</div>\n            </div>\n          )\n        })}\n      </div>\n    </>\n  )\n}\n\nfunction generateRandomHexCode() {\n  let hexCode = \"#\"\n\n  // Generate a random hex color code\n  for (let i = 0; i < 6; i++) {\n    // Generate a random number between 0 and 15, convert to hex\n    let hexSegment = Math.floor(Math.random() * 16).toString(16)\n\n    // Add the segment to the hex code\n    hexCode += hexSegment\n  }\n\n  return hexCode\n}\n\nexport const ViewDataInTable = ({ labels, annotations }) => {\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    const tempData = {}\n    labels.forEach((label) => {\n      tempData[label] = 0\n    })\n    annotations.forEach((annotation) => {\n      const { data } = annotation\n      const { text } = data\n      const frquency = tempData[text] ? tempData[text] + 1 : 1\n      tempData[text] = frquency\n    })\n    setData(tempData)\n    console.log({ tempData })\n  }, [annotations])\n  return (\n    <>\n      <div className=\"dataHolder\">\n        <div className=\"dataItem\">\n          <div className=\"dataItemSno\">Sn.</div>\n          <div className=\"dataItemLabel\">Lables</div>\n          <div className=\"dataItemValue\">Fq.</div>\n        </div>\n\n        {Object.keys(data).map((key, index) => {\n          return (\n            <div className=\"dataItem\" key={key}>\n              <div className=\"dataItemSno\">{index + 1}</div>\n              <div className=\"dataItemLabel\">{key}</div>\n              <div className=\"dataItemValue\">{data[key]}</div>\n            </div>\n          )\n        })}\n      </div>\n    </>\n  )\n}\n\nexport const Preview = (props) => {\n  const {\n    increaseLabelFontSize,\n    decreaseLabelFontSize,\n    labelFontSize,\n    renderImageToCanvas,\n    togglePreview,\n    canvasRef,\n    preview,\n    labnelLineWidth,\n    increaseLabelLineWidth,\n    decreaseLabelLineWidth,\n  } = props\n\n  const [dataUrl, setdataUrl] = useState(null)\n  const rerender = async () => {\n    await renderImageToCanvas(labelFontSize, labnelLineWidth)\n    const dataUrl = canvasRef.current?.toDataURL()\n    setdataUrl(dataUrl)\n  }\n\n  useEffect(() => {\n    rerender()\n  }, [labelFontSize, labnelLineWidth])\n\n  //   useEffect(() => {\n  //     const dataUrl = canvasRef.current?.toDataURL()\n  //     setdataUrl(dataUrl)\n  //   }, [canvasRef])\n  return (\n    <div className=\"previewHolder\">\n      <div className=\"menu\">\n        <button className=\"\" onClick={togglePreview}>\n          Close\n        </button>\n        <button style={{ backgroundColor: \"grey\" }}>Font Size</button>\n        <button className=\"\" onClick={increaseLabelFontSize}>\n          +\n        </button>\n        <button className=\"\" onClick={decreaseLabelFontSize}>\n          -\n        </button>\n        <button style={{ backgroundColor: \"grey\" }}>Line Width</button>\n\n        <button className=\"\" onClick={increaseLabelLineWidth}>\n          +\n        </button>\n        <button className=\"\" onClick={decreaseLabelLineWidth}>\n          -\n        </button>\n      </div>\n      {!dataUrl && <p>Loading please wait ...</p>}\n      {dataUrl && <img src={dataUrl} alt=\"preview\" />}\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/expand.9dd54df5.svg\";","export default __webpack_public_path__ + \"static/media/shrink.38fe5d9e.svg\";","import {\n  // Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { Component } from \"react\"\nimport \"./label-image.css\"\n\nimport Annotation from \"react-image-annotation\"\nimport {\n  renderHighlight,\n  renderContent,\n  renderEditor,\n  DataDiv,\n  ViewDataInTable,\n  Preview,\n} from \"./utils/functions.jsx\"\n\nimport expand from \"./assets/expand.svg\"\nimport shrink from \"./assets/shrink.svg\"\n\nclass MyComponent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      annotations: [...this.props?.detectedAnotations],\n      annotation: {},\n      showDiv: false,\n      coords: { x: 0, y: 0 },\n      isEditable: false,\n      showLabels: true,\n      isFullWidth: false,\n      enablePreview: false,\n      labelFontSize: 40,\n      labnelLineWidth: 5,\n    }\n  }\n\n  canvasRef = React.createRef()\n  increaseLabelFontSize = () => {\n    this.setState({ labelFontSize: this.state.labelFontSize + 5 })\n  }\n  decreaseLabelFontSize = () => {\n    this.setState({ labelFontSize: this.state.labelFontSize - 5 })\n  }\n  increaseLabelLineWidth = () => {\n    this.setState({ labnelLineWidth: this.state.labnelLineWidth + 4 })\n  }\n  decreaseLabelLineWidth = () => {\n    this.setState({ labnelLineWidth: this.state.labnelLineWidth - 4 })\n  }\n\n  togglePreview = () => {\n    this.setState({ enablePreview: !this.state.enablePreview })\n  }\n  toggleLabels = () => {\n    this.setState({ showLabels: !this.state.showLabels })\n  }\n  enableEditing = () => {\n    this.setState({ isEditable: !this.state.isEditable })\n  }\n  toggleFullWidth = () => {\n    this.setState({ isFullWidth: !this.state.isFullWidth })\n  }\n  moveDiv = (e) => {\n    this.setState({ coords: { x: e.clientX, y: e.clientY } })\n  }\n\n  onMouseMove = (e) => {\n    this.setState({ showDiv: true })\n    window.addEventListener(\"mousemove\", this.moveDiv)\n  }\n\n  onMouseOut = (e) => {\n    this.setState({ showDiv: false })\n    window.removeEventListener(\"mousemove\", this.moveDiv)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mousemove\", this.moveDiv)\n  }\n\n  renderImageToCanvas = (\n    labelFontSize = this.state.labelFontSize,\n    labnelLineWidth = this.state.labnelLineWidth\n  ) => {\n    return new Promise((resolve) => {\n      const canvas = this.canvasRef.current\n      const context = canvas.getContext(\"2d\")\n      const img = new Image()\n\n      img.onload = () => {\n        canvas.width = img.width\n        canvas.height = img.height\n        context.drawImage(img, 0, 0, img.width, img.height)\n\n        this.state.annotations.forEach((annotation) => {\n          const { geometry, data } = annotation\n          const { x, y, width, height } = geometry\n          const { text } = data\n\n          const [px, py, pwidth, pheight] = [\n            (x / 100) * img.width,\n            (y / 100) * img.height,\n            (width / 100) * img.width,\n            (height / 100) * img.height,\n          ]\n\n          context.beginPath()\n          context.rect(px, py, pwidth, pheight)\n          context.lineWidth = labnelLineWidth\n          context.strokeStyle = \"red\"\n\n          context.stroke()\n          context.fillStyle = \"white\"\n          context.font = `bold ${labelFontSize}px Roboto` // Set the font size and font family\n          context.fillText(\n            text,\n            px,\n            py > labelFontSize ? py - labnelLineWidth : py + labelFontSize\n          )\n\n          context.fillStyle = \"black\"\n          context.fillRect(\n            px,\n            (py > labelFontSize ? py - labnelLineWidth : py + labelFontSize) -\n              labelFontSize -\n              20,\n            context.measureText(text).width + 20,\n            labelFontSize + 20\n          )\n\n          context.fillStyle = \"white\"\n          context.font = `bold ${labelFontSize}px Roboto` // Set the font size and font family\n          context.fillText(\n            text,\n            px + 10,\n            py > labelFontSize\n              ? py - labnelLineWidth - 10\n              : py + labelFontSize - 10\n          )\n        })\n\n        // Resolve the Promise after the image has loaded and drawn\n        resolve()\n      }\n\n      img.src = \"data:image/jpeg;base64,\" + this.props.image\n    })\n  }\n\n  onChange = (annotation) => {\n    this.setState({ annotation })\n  }\n\n  onSubmit = (annotation) => {\n    const { geometry, data } = annotation\n\n    this.setState({\n      annotation: {},\n      annotations: this.state.annotations.concat({\n        geometry,\n        data: {\n          ...data,\n          id: Math.random(),\n        },\n      }),\n    })\n  }\n  onChangeType = (e) => {\n    this.setState({\n      annotation: {},\n      type: e.currentTarget.innerHTML,\n    })\n  }\n  deleteAnnotation = (id) => {\n    this.setState({\n      annotations: this.state.annotations.filter((annotation) => {\n        return annotation.data.id !== id\n      }),\n    })\n  }\n\n  downloadImage = async () => {\n    // First, render the image to the canvas\n    await this.renderImageToCanvas()\n\n    // Then, create a data URL of the canvas content\n    const dataUrl = this.canvasRef.current?.toDataURL()\n\n    // Create a new 'a' element\n    const link = document.createElement(\"a\")\n    link.href = dataUrl\n\n    // Set the download attribute with the desired file name\n    link.download = \"image.png\"\n\n    // Trigger a click on the link to start the download\n    link.click()\n  }\n  preview = async () => {\n    await this.renderImageToCanvas()\n    this.setState({ enablePreview: true })\n  }\n\n  render() {\n    const imageSrc = \"data:image/jpeg;base64,\" + this.props.image\n\n    return (\n      <>\n        <div className=\"menu\">\n          {this.state.isEditable ? (\n            <>\n              <button onClick={this.toggleLabels}>\n                {this.state.showLabels ? \"Hide\" : \"Show\"} Labels\n              </button>\n\n              <button onClick={this.downloadImage}>Download</button>\n              <button onClick={this.togglePreview}>\n                {this.state.enablePreview ? \"Hide\" : \"Show\"} Preview\n              </button>\n              <button onClick={this.toggleFullWidth}>\n                {this.state.isFullWidth ? (\n                  <img src={expand} alt=\"expnad\" />\n                ) : (\n                  <img src={shrink} alt=\"shink\" />\n                )}\n              </button>\n            </>\n          ) : (\n            <>\n              <button onClick={this.enableEditing}>Edit labels</button>\n            </>\n          )}\n        </div>\n        <div className=\"parent\">\n          <div\n            className=\"hoverDiv image-editor\"\n            onMouseMove={this.onMouseMove}\n            onMouseOut={this.onMouseOut}\n            style={{\n              maxWidth: this.state.isFullWidth ? \"unset\" : \"900px\",\n            }}\n          >\n            <Annotation\n              src={imageSrc}\n              alt=\"pcb\"\n              annotations={this.state.annotations}\n              type={this.state.type}\n              value={this.state.annotation}\n              onChange={this.onChange}\n              onSubmit={this.onSubmit}\n              disableEditor={!this.state.isEditable}\n              disableAnnotation={!this.state.isEditable}\n              disableSelector={!this.state.isEditable}\n              disableOverlay={!this.state.isEditable}\n              renderEditor={(props) => {\n                //there are default props too as per the docs\n                const labels = this.props.labels\n                return renderEditor(props, labels)\n              }}\n              renderContent={renderContent}\n              renderHighlight={({ annotation, active }) => {\n                return renderHighlight({\n                  annotation,\n                  active,\n                  showLabels: this.state.showLabels,\n                  deleteAnnotation: this.deleteAnnotation,\n                })\n              }}\n            />\n          </div>\n          <div className=\"dataViewer\">\n            <ViewDataInTable\n              labels={this.props.labels}\n              annotations={this.state.annotations}\n            />\n          </div>\n        </div>\n\n        <canvas ref={this.canvasRef} style={{ display: \"none\" }} />\n\n        {this.state.enablePreview && (\n          <Preview\n            increaseLabelFontSize={this.increaseLabelFontSize}\n            decreaseLabelFontSize={this.decreaseLabelFontSize}\n            labelFontSize={this.state.labelFontSize}\n            renderImageToCanvas={this.renderImageToCanvas}\n            togglePreview={this.togglePreview}\n            canvasRef={this.canvasRef}\n            labnelLineWidth={this.state.labnelLineWidth}\n            increaseLabelLineWidth={this.increaseLabelLineWidth}\n            decreaseLabelLineWidth={this.decreaseLabelLineWidth}\n          />\n        )}\n        {/* {this.state.showDiv && (\n              <div\n                className=\"hover-info\"\n                style={{\n                  top: `${this.state.coords.y + 30}px`,\n                  left: `${this.state.coords.x + 30}px`,\n                }}\n                // style={{\n                //   top: `${50}px`,\n                //   left: `${20}px`,\n                // }}\n              >\n                <DataDiv\n                  labels={this.props.labels}\n                  annotations={this.state.annotations}\n                />\n              </div>\n            )} */}\n      </>\n    )\n  }\n}\n\nclass App extends StreamlitComponentBase {\n  render() {\n    const { image, labels, detectedAnotations } = this.props.args\n\n    return (\n      <MyComponent\n        image={image}\n        labels={labels}\n        detectedAnotations={detectedAnotations}\n      />\n    )\n  }\n}\n\nexport default withStreamlitConnection(App)\n\n// {\n//   \"annotations\": [\n//       {\n//           \"geometry\": {\n//               \"type\": \"RECTANGLE\",\n//               \"x\": 13.494318181818182,\n//               \"y\": 21.284080914687774,\n//               \"width\": 12.642045454545455,\n//               \"height\": 27.08883025505717\n//           },\n//           \"data\": {\n//               \"text\": \"new\",\n//               \"id\": 0.3982473149726953\n//           }\n//       }\n//   ],\n//   \"annotation\": {}\n// }\n\n// {\n//   \"annotations\": [],\n//   \"annotation\": {\n//       \"selection\": {\n//           \"mode\": \"EDITING\",\n//           \"anchorX\": 16.90340909090909,\n//           \"anchorY\": 29.37554969217238,\n//           \"showEditor\": true\n//       },\n//       \"geometry\": {\n//           \"type\": \"RECTANGLE\",\n//           \"x\": 16.90340909090909,\n//           \"y\": 29.37554969217238,\n//           \"width\": 9.65909090909091,\n//           \"height\": 5.980650835532106\n//       },\n//       \"data\": {\n//           \"text\": \"option1\"\n//       }\n//   }\n// }\n\n// {\n//   \"annotations\": [],\n//   \"annotation\": {\n//       \"selection\": {\n//           \"mode\": \"EDITING\",\n//           \"anchorX\": 17.1875,\n//           \"anchorY\": 29.551451187335093,\n//           \"showEditor\": true\n//       },\n//       \"geometry\": {\n//           \"type\": \"RECTANGLE\",\n//           \"x\": 17.1875,\n//           \"y\": 29.551451187335093,\n//           \"width\": 9.65909090909091,\n//           \"height\": 5.980650835532099\n//       },\n//       \"data\": {\n//           \"text\": \"option1\"\n//       }\n//   }\n// }\n\n// {\n//   \"annotations\": [\n//       {\n//           \"geometry\": {\n//               \"type\": \"RECTANGLE\",\n//               \"x\": 1.4204545454545454,\n//               \"y\": 1.58311345646438,\n//               \"width\": 49.85795454545455,\n//               \"height\": 50.131926121372025\n//           },\n//           \"data\": {\n//               \"text\": \"option1\",\n//               \"id\": 0.42675792821517256\n//           }\n//       },\n//       {\n//           \"geometry\": {\n//               \"type\": \"RECTANGLE\",\n//               \"x\": 51.42045454545454,\n//               \"y\": 49.780123131046615,\n//               \"width\": 48.295454545454554,\n//               \"height\": 49.42832014072119\n//           },\n//           \"data\": {\n//               \"text\": \"option2\",\n//               \"id\": 0.1293396936727722\n//           }\n//       }\n//   ],\n//   \"annotation\": {\n//       \"selection\": {\n//           \"mode\": \"EDITING\",\n//           \"anchorX\": 98.7215909090909,\n//           \"anchorY\": 1.2313104661389622,\n//           \"showEditor\": true\n//       },\n//       \"geometry\": {\n//           \"type\": \"RECTANGLE\",\n//           \"x\": 51.42045454545454,\n//           \"y\": 1.2313104661389622,\n//           \"width\": 47.30113636363637,\n//           \"height\": 48.37291116974494\n//       },\n//       \"data\": {\n//           \"text\": \"option3\"\n//       }\n//   }\n// }\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport MyComponent from \"./MyComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}