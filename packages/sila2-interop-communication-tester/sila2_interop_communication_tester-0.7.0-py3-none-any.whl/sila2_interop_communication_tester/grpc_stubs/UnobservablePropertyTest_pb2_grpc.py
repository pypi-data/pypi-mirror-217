# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import UnobservablePropertyTest_pb2 as UnobservablePropertyTest__pb2


class UnobservablePropertyTestStub(object):
    """This feature tests a static and a dynamic unobservable property."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get_AnswerToEverything = channel.unary_unary(
            "/sila2.org.silastandard.test.unobservablepropertytest.v1.UnobservablePropertyTest/Get_AnswerToEverything",
            request_serializer=UnobservablePropertyTest__pb2.Get_AnswerToEverything_Parameters.SerializeToString,
            response_deserializer=UnobservablePropertyTest__pb2.Get_AnswerToEverything_Responses.FromString,
        )
        self.Get_SecondsSince1970 = channel.unary_unary(
            "/sila2.org.silastandard.test.unobservablepropertytest.v1.UnobservablePropertyTest/Get_SecondsSince1970",
            request_serializer=UnobservablePropertyTest__pb2.Get_SecondsSince1970_Parameters.SerializeToString,
            response_deserializer=UnobservablePropertyTest__pb2.Get_SecondsSince1970_Responses.FromString,
        )


class UnobservablePropertyTestServicer(object):
    """This feature tests a static and a dynamic unobservable property."""

    def Get_AnswerToEverything(self, request, context):
        """Returns the answer to the ultimate question of life, the universe, and everything. 42."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Get_SecondsSince1970(self, request, context):
        """Returns the unix timestamp: The time in seconds since January 1st of 1970."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_UnobservablePropertyTestServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Get_AnswerToEverything": grpc.unary_unary_rpc_method_handler(
            servicer.Get_AnswerToEverything,
            request_deserializer=UnobservablePropertyTest__pb2.Get_AnswerToEverything_Parameters.FromString,
            response_serializer=UnobservablePropertyTest__pb2.Get_AnswerToEverything_Responses.SerializeToString,
        ),
        "Get_SecondsSince1970": grpc.unary_unary_rpc_method_handler(
            servicer.Get_SecondsSince1970,
            request_deserializer=UnobservablePropertyTest__pb2.Get_SecondsSince1970_Parameters.FromString,
            response_serializer=UnobservablePropertyTest__pb2.Get_SecondsSince1970_Responses.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "sila2.org.silastandard.test.unobservablepropertytest.v1.UnobservablePropertyTest", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class UnobservablePropertyTest(object):
    """This feature tests a static and a dynamic unobservable property."""

    @staticmethod
    def Get_AnswerToEverything(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/sila2.org.silastandard.test.unobservablepropertytest.v1.UnobservablePropertyTest/Get_AnswerToEverything",
            UnobservablePropertyTest__pb2.Get_AnswerToEverything_Parameters.SerializeToString,
            UnobservablePropertyTest__pb2.Get_AnswerToEverything_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Get_SecondsSince1970(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/sila2.org.silastandard.test.unobservablepropertytest.v1.UnobservablePropertyTest/Get_SecondsSince1970",
            UnobservablePropertyTest__pb2.Get_SecondsSince1970_Parameters.SerializeToString,
            UnobservablePropertyTest__pb2.Get_SecondsSince1970_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
