Metadata-Version: 2.1
Name: termkit
Version: 0.2.0a4
Summary: Command Line Tools with ease
Author: Thomas MahÃ©
Author-email: contact@tmahe.dev
Requires-Python: >=3.7,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: pyyaml (>=6.0,<7.0)
Description-Content-Type: text/markdown

<p align="center">
    <img alt="Termkit" title="Termkit" src="docs/images/banner.png#gh-dark-mode-only" width="450">
    <img alt="Termkit" title="Termkit" src="docs/images/banner_light.png#gh-light-mode-only" width="450">
</p>
<div align="center">
  <b><i>Command Line Tools with... ease.</i></b>
<hr>

[![Tests](https://github.com/thmahe/termkit/actions/workflows/tests.yml/badge.svg)](https://github.com/thmahe/termkit/actions/workflows/tests.yml)
[![codecov](https://codecov.io/github/thmahe/termkit/branch/master/graph/badge.svg?token=o7UVrOsoq4)](https://codecov.io/github/thmahe/termkit)
![PyPI](https://img.shields.io/pypi/v/termkit)
![Platforms](https://img.shields.io/badge/platforms-Linux%20%7C%20MacOS%20%7C%20Windows-lightgrey)

</div>

## Table of Contents

- [Introduction](#introduction)
- [Features](#features)
- [Requirement](#requirement)
- [Installation](#installation)
- [Examples](#examples)
- [Feedback](#feedback)
- [Acknowledgments](#acknowledgments)

## Introduction

Termkit is a framework for building command line interface applications using functions 
and type hints [[PEP 484]](https://peps.python.org/pep-0484/). 
**Solely written using [Python Standard Library](https://docs.python.org/3/library/)** and will always be to ensure
minimal dependency footprint within your project.

In few words, Termkit is designed to be the foundation of serious CLI tools.

## Features

A few of the things you can do with Termkit:

* Build CLI from functional code
* Create fast prototypes using implicit arguments
* Helpers populated from docstrings
* Named profile for pre-populated arguments
* Autocompletion through [argcomplete](https://pypi.org/project/argcomplete/) module
* Cross-platforms

## Requirement
* Python 3.7 or higher

*Yes... that's about it !* 

### Compatibility matrix

|          OS | Python 3.6 |     Python 3.7     |     Python 3.8     |     Python 3.9     |    Python 3.10     |    Python 3.11     |    Python 3.12    |
|------------:|:----------:|:------------------:|:------------------:|:------------------:|:------------------:|:------------------:|:-----------------:|
|   **Linux** |    :x:     | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_plus_sign: |
|   **MacOS** |    :x:     | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_plus_sign: |
| **Windows** |    :x:     | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_plus_sign: |


## Installation

Termkit is published as a [Python package](https://pypi.org/project/termkit) and can be installed with pip.

Open up a terminal and install Termkit with:
```shell
pip install termkit
```

## Examples

### Greeting application

```python
# greet.py
import termkit

def greet(name):
    print(f'Hello {name} !')

if __name__ == '__main__':
    termkit.run(greet)
```

```
$ python3 ./greet.py Thomas
Hello Thomas !
```

## Feedback

Feel free to send me feedback by [raising an issue](https://github.com/thmahe/termkit/issues/new).
Feature requests are always welcome.


